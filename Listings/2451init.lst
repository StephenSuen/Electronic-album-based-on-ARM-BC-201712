


ARM Macro Assembler    Page 1 


    1 00000000         ;=========================================
    2 00000000         ; NAME: 2440INIT.S
    3 00000000         ; DESC: C start up codes
    4 00000000         ;       Configure memory, ISR ,stacks//Æô¶¯´úÂë£¬ÅäÖÃISR
                       £¬ÄÚ´æ£¬Õ»
    5 00000000         ; Initialize C-variables
    6 00000000         ; HISTORY:
    7 00000000         ; 2002.02.25:kwtark: ver 0.0
    8 00000000         ; 2002.03.20:purnnamu: Add some functions for testing ST
                       OP,Sleep mode
    9 00000000         ; 2003.03.14:DonGo: Modified for 2440.
   10 00000000         ;=========================================
   11 00000000         
   12 00000000                 GET              option.inc
    1 00000000         ;===========================================
    2 00000000         ; NAME: OPTION.A
    3 00000000         ; DESC: Configuration options for .S files
    4 00000000         ; HISTORY:
    5 00000000         ; 02.28.2002: ver 0.0
    6 00000000         ; 03.11.2003: ver 0.0 attached for 2440.
    7 00000000         ; jan E, 2004: ver0.03  modified for 2440A01.
    8 00000000         ;===========================================
    9 00000000         
   10 00000000         ;Start address of each stacks,
   11 00000000 33FF8000 
                       _STACK_BASEADDRESS
                               EQU              0x33ff8000
   12 00000000 33FF8000 
                       _MMUTT_STARTADDRESS
                               EQU              0x33ff8000
   13 00000000 33FFFF00 
                       _ISR_STARTADDRESS
                               EQU              0x33ffff00
   14 00000000         
   15 00000000                 GBLL             PLL_ON_START
   16 00000000 TRUE     
                       PLL_ON_START
                               SETL             {TRUE}
   17 00000000         
   18 00000000         
   19 00000000                 GBLL             ENDIAN_CHANGE
   20 00000000 FALSE    
                       ENDIAN_CHANGE
                               SETL             {FALSE}
   21 00000000         
   22 00000000                 GBLA             ENTRY_BUS_WIDTH
   23 00000000 00000010 
                       ENTRY_BUS_WIDTH
                               SETA             16
   24 00000000         
   25 00000000         
   26 00000000         ;BUSWIDTH = 16,32
   27 00000000                 GBLA             BUSWIDTH    ;max. bus width for
                                                             the GPIO configura
                                                            tion
   28 00000000 00000020 
                       BUSWIDTH
                               SETA             32
   29 00000000         



ARM Macro Assembler    Page 2 


   30 00000000         
   31 00000000                 END
   13 00000000                 GET              memcfg.inc
    1 00000000         ;************************************************
    2 00000000         ; NAME    : MEMCFG.A
    3 00000000         ; DESC   : Memory bank configuration file
    4 00000000         ; Revision: 02.28.2002 ver 0.0
    5 00000000         ; Revision: 03.11.2003 ver 0.0 Attatched for 2440
    6 00000000         ;************************************************
    7 00000000         
    8 00000000         ;Memory Area
    9 00000000         ;GCS6 32bit(64MB) SDRAM(0x3000_0000-0x33ff_ffff)
   10 00000000         
   11 00000000         
   12 00000000         ;BWSCON
   13 00000000 00000000 
                       DW8     EQU              (0x0)
   14 00000000 00000001 
                       DW16    EQU              (0x1)
   15 00000000 00000002 
                       DW32    EQU              (0x2)
   16 00000000 00000004 
                       WAIT    EQU              (0x1<<2)
   17 00000000 00000008 
                       UBLB    EQU              (0x1<<3)
   18 00000000         
   19 00000000                 ASSERT           :DEF:BUSWIDTH
   20 00000000                 [                BUSWIDTH=16
   29 00000000 00000001 
                       B1_BWSCON
                               EQU              (DW16)      ; AMD flash(AM29LV8
                                                            00B), 16-bit,  for 
                                                            nCS1
   30 00000000 00000001 
                       B2_BWSCON
                               EQU              (DW16)      ; PCMCIA(PD6710), 1
                                                            6-bit
   31 00000000 00000001 
                       B3_BWSCON
                               EQU              (DW16)      ; Ethernet(CS8900),
                                                             16-bit
   32 00000000 00000002 
                       B4_BWSCON
                               EQU              (DW32)      ; Intel Strata(28F1
                                                            28), 32-bit, for nC
                                                            S4
   33 00000000 00000001 
                       B5_BWSCON
                               EQU              (DW16)      ; A400/A410 Ext, 16
                                                            -bit
   34 00000000 00000002 
                       B6_BWSCON
                               EQU              (DW32)      ; SDRAM(K4S561632C)
                                                             32MBx2, 32-bit
   35 00000000 00000002 
                       B7_BWSCON
                               EQU              (DW32)      ; N.C.
   36 00000000                 ]
   37 00000000         



ARM Macro Assembler    Page 3 


   38 00000000         ;BANK0CON
   39 00000000         
   40 00000000 00000003 
                       B0_Tacs EQU              0x3         ;0clk
   41 00000000 00000003 
                       B0_Tcos EQU              0x3         ;0clk
   42 00000000 00000007 
                       B0_Tacc EQU              0x7         ;14clk
   43 00000000 00000003 
                       B0_Tcoh EQU              0x3         ;0clk
   44 00000000 00000003 
                       B0_Tah  EQU              0x3         ;0clk
   45 00000000 00000001 
                       B0_Tacp EQU              0x1
   46 00000000 00000000 
                       B0_PMC  EQU              0x0         ;normal
   47 00000000         
   48 00000000         ;BANK1CON
   49 00000000 00000001 
                       B1_Tacs EQU              1           ;0x0 ;0clk
   50 00000000 00000001 
                       B1_Tcos EQU              1           ;0x0 ;0clk
   51 00000000 00000006 
                       B1_Tacc EQU              6           ;0x7 ;14clk
   52 00000000 00000001 
                       B1_Tcoh EQU              1           ;0x0 ;0clk
   53 00000000 00000001 
                       B1_Tah  EQU              1           ;0x0 ;0clk
   54 00000000 00000000 
                       B1_Tacp EQU              0x0
   55 00000000 00000000 
                       B1_PMC  EQU              0x0         ;normal
   56 00000000         
   57 00000000         ;Bank 2 parameter
   58 00000000 00000001 
                       B2_Tacs EQU              1           ;0x0 ;0clk
   59 00000000 00000001 
                       B2_Tcos EQU              1           ;0x0 ;0clk
   60 00000000 00000006 
                       B2_Tacc EQU              6           ;0x7 ;14clk
   61 00000000 00000001 
                       B2_Tcoh EQU              1           ;0x0 ;0clk
   62 00000000 00000001 
                       B2_Tah  EQU              1           ;0x0 ;0clk
   63 00000000 00000000 
                       B2_Tacp EQU              0x0
   64 00000000 00000000 
                       B2_PMC  EQU              0x0         ;normal
   65 00000000         
   66 00000000         ;Bank 3 parameter
   67 00000000 00000001 
                       B3_Tacs EQU              0x1         ;0 ;0clk
   68 00000000 00000001 
                       B3_Tcos EQU              0x1         ;0 ;0clk
   69 00000000 00000006 
                       B3_Tacc EQU              0x6         ;7 ;14clk
   70 00000000 00000001 
                       B3_Tcoh EQU              0x1         ;0 ;0clk
   71 00000000 00000001 



ARM Macro Assembler    Page 4 


                       B3_Tah  EQU              0x1         ;0 ;0clk
   72 00000000 00000000 
                       B3_Tacp EQU              0x0
   73 00000000 00000000 
                       B3_PMC  EQU              0x0         ;normal
   74 00000000         
   75 00000000         ;Bank 4 parameter
   76 00000000 00000001 
                       B4_Tacs EQU              0x1         ;0 ;0clk
   77 00000000 00000001 
                       B4_Tcos EQU              0x1         ;0 ;0clk
   78 00000000 00000006 
                       B4_Tacc EQU              0x6         ;7 ;14clk
   79 00000000 00000001 
                       B4_Tcoh EQU              0x1         ;0 ;0clk
   80 00000000 00000001 
                       B4_Tah  EQU              0x1         ;0 ;0clk
   81 00000000 00000000 
                       B4_Tacp EQU              0x0
   82 00000000 00000000 
                       B4_PMC  EQU              0x0         ;normal
   83 00000000         
   84 00000000         ;Bank 5 parameter
   85 00000000 00000001 
                       B5_Tacs EQU              0x1         ;0 ;0clk
   86 00000000 00000001 
                       B5_Tcos EQU              0x1         ;0 ;0clk
   87 00000000 00000006 
                       B5_Tacc EQU              0x6         ;7 ;14clk
   88 00000000 00000001 
                       B5_Tcoh EQU              0x1         ;0 ;0clk
   89 00000000 00000001 
                       B5_Tah  EQU              0x1         ;0 ;0clk
   90 00000000 00000000 
                       B5_Tacp EQU              0x0
   91 00000000 00000000 
                       B5_PMC  EQU              0x0         ;normal
   92 00000000         
   93 00000000                 [                {TRUE}      ; When 100MHz HCLK 
                                                            is used.
   94 00000000         ;Bank 6 parameter
   95 00000000 00000003 
                       B6_MT   EQU              0x3         ;SDRAM
   96 00000000 00000001 
                       B6_Trcd EQU              0x1         ;3clk
   97 00000000 00000001 
                       B6_SCAN EQU              0x1         ;9bit
   98 00000000         
   99 00000000         ;Bank 7 parameter
  100 00000000 00000003 
                       B7_MT   EQU              0x3         ;SDRAM
  101 00000000 00000001 
                       B7_Trcd EQU              0x1         ;3clk
  102 00000000 00000001 
                       B7_SCAN EQU              0x1         ;9bit
  103 00000000         
  104 00000000         ;REFRESH parameter
  105 00000000 00000001 
                       REFEN   EQU              0x1         ;Refresh enable



ARM Macro Assembler    Page 5 


  106 00000000 00000000 
                       TREFMD  EQU              0x0         ;CBR(CAS before RAS
                                                            )/Auto refresh
  107 00000000 00000001 
                       Trp     EQU              0x1         ;3clk
  108 00000000 00000001 
                       Tsrc    EQU              0x1         ;5clk Trc= Trp(3)+T
                                                            src(5) = 8clock
  109 00000000 00000002 
                       Tchr    EQU              0x2         ;3clk
  110 00000000 000004F4 
                       REFCNT  EQU              1268        ;1463;1268 ;HCLK=10
                                                            5Mhz, (2048+1-7.81*
                                                            100);75M->1463
  111 00000000         
  112 00000000                 |
  131                          ]
  132 00000000         
  133 00000000                 END
   14 00000000                 GET              2451addr.inc
    1 00000000         ;=======================================================
                       =============
    2 00000000         ; File Name : 2440addr.a
    3 00000000         ; Function  : S3C2440 Define Address Register (Assembly)
                       
    4 00000000         ; Date      : March 27, 2002
    5 00000000         ; Revision : Programming start (February 18,2002) -> SOP
                       
    6 00000000         ; Revision : 03.11.2003 ver 0.0 Attatched for 2440
    7 00000000         ;=======================================================
                       =============
    8 00000000         
    9 00000000                 GBLL             BIG_ENDIAN__
   10 00000000 FALSE    
                       BIG_ENDIAN__
                               SETL             {FALSE}
   11 00000000         
   12 00000000         ;=================
   13 00000000         ; Memory control
   14 00000000         ;=================
   15 00000000 48000000 
                       BWSCON  EQU              0x48000000  ;Bus width & wait s
                                                            tatus
   16 00000000 48000004 
                       BANKCON0
                               EQU              0x48000004  ;Boot ROM control
   17 00000000 48000008 
                       BANKCON1
                               EQU              0x48000008  ;BANK1 control
   18 00000000 4800000C 
                       BANKCON2
                               EQU              0x4800000c  ;BANK2 control
   19 00000000 48000010 
                       BANKCON3
                               EQU              0x48000010  ;BANK3 control
   20 00000000 48000014 
                       BANKCON4
                               EQU              0x48000014  ;BANK4 control
   21 00000000 48000018 



ARM Macro Assembler    Page 6 


                       BANKCON5
                               EQU              0x48000018  ;BANK5 control
   22 00000000 4800001C 
                       BANKCON6
                               EQU              0x4800001c  ;BANK6 control
   23 00000000 48000020 
                       BANKCON7
                               EQU              0x48000020  ;BANK7 control
   24 00000000 48000024 
                       REFRESH EQU              0x48000024  ;DRAM/SDRAM refresh
                                                            
   25 00000000 48000028 
                       BANKSIZE
                               EQU              0x48000028  ;Flexible Bank Size
                                                            
   26 00000000 4800002C 
                       MRSRB6  EQU              0x4800002c  ;Mode register set 
                                                            for SDRAM Bank6
   27 00000000 48000030 
                       MRSRB7  EQU              0x48000030  ;Mode register set 
                                                            for SDRAM Bank7
   28 00000000         
   29 00000000         
   30 00000000         ;==========================
   31 00000000         ; CLOCK & POWER MANAGEMENT
   32 00000000         ;==========================
   33 00000000 4C000000 
                       LOCKTIME
                               EQU              0x4c000000  ;PLL lock time coun
                                                            ter
   34 00000000 4C000004 
                       MPLLCON EQU              0x4c000004  ;MPLL Control
   35 00000000 4C000008 
                       UPLLCON EQU              0x4c000008  ;UPLL Control
   36 00000000 4C00000C 
                       CLKCON  EQU              0x4c00000c  ;Clock generator co
                                                            ntrol
   37 00000000 4C000010 
                       CLKSLOW EQU              0x4c000010  ;Slow clock control
                                                            
   38 00000000 4C000014 
                       CLKDIVN EQU              0x4c000014  ;Clock divider cont
                                                            rol
   39 00000000         
   40 00000000         
   41 00000000         ;=================
   42 00000000         ; INTERRUPT
   43 00000000         ;=================
   44 00000000 4A000000 
                       SRCPND  EQU              0x4a000000  ;Interrupt request 
                                                            status
   45 00000000 4A000004 
                       INTMOD  EQU              0x4a000004  ;Interrupt mode con
                                                            trol
   46 00000000 4A000008 
                       INTMSK  EQU              0x4a000008  ;Interrupt mask con
                                                            trol
   47 00000000 4A00000C 
                       PRIORITY



ARM Macro Assembler    Page 7 


                               EQU              0x4a00000c  ;IRQ priority contr
                                                            ol           <-- Ma
                                                            y 06, 2002 SOP
   48 00000000 4A000010 
                       INTPND  EQU              0x4a000010  ;Interrupt request 
                                                            status
   49 00000000 4A000014 
                       INTOFFSET
                               EQU              0x4a000014  ;Interruot request 
                                                            source offset
   50 00000000 4A000018 
                       SUSSRCPND
                               EQU              0x4a000018  ;Sub source pending
                                                            
   51 00000000 4A00001C 
                       INTSUBMSK
                               EQU              0x4a00001c  ;Interrupt sub mask
                                                            
   52 00000000         
   53 00000000         
   54 00000000         ;=================
   55 00000000         ; I/O PORT for LED
   56 00000000         ;=================
   57 00000000 56000050 
                       GPFCON  EQU              0x56000050  ;Port F control
   58 00000000 56000054 
                       GPFDAT  EQU              0x56000054  ;Port F data
   59 00000000 56000058 
                       GPFUP   EQU              0x56000058  ;Pull-up control F
   60 00000000         
   61 00000000 56000010 
                       GPBCON  EQU              0x56000010  ;Port B control
   62 00000000 56000014 
                       GPBDAT  EQU              0x56000014  ;Port B data
   63 00000000         
   64 00000000         
   65 00000000         ;Miscellaneous register
   66 00000000 56000080 
                       MISCCR  EQU              0x56000080  ;Miscellaneous cont
                                                            rol
   67 00000000 56000084 
                       DCKCON  EQU              0x56000084  ;DCLK0/1 control
   68 00000000 56000088 
                       EXTINT0 EQU              0x56000088  ;External interrupt
                                                             control register 0
                                                            
   69 00000000 5600008C 
                       EXTINT1 EQU              0x5600008c  ;External interrupt
                                                             control register 1
                                                            
   70 00000000 56000090 
                       EXTINT2 EQU              0x56000090  ;External interrupt
                                                             control register 2
                                                            
   71 00000000 56000094 
                       EINTFLT0
                               EQU              0x56000094  ;Reserved
   72 00000000 56000098 
                       EINTFLT1



ARM Macro Assembler    Page 8 


                               EQU              0x56000098  ;Reserved
   73 00000000 5600009C 
                       EINTFLT2
                               EQU              0x5600009c  ;External interrupt
                                                             filter control reg
                                                            ister 2
   74 00000000 560000A0 
                       EINTFLT3
                               EQU              0x560000a0  ;External interrupt
                                                             filter control reg
                                                            ister 3
   75 00000000 560000A4 
                       EINTMASK
                               EQU              0x560000a4  ;External interrupt
                                                             mask
   76 00000000 560000A8 
                       EINTPEND
                               EQU              0x560000a8  ;External interrupt
                                                             pending
   77 00000000 560000AC 
                       GSTATUS0
                               EQU              0x560000ac  ;External pin statu
                                                            s
   78 00000000 560000B0 
                       GSTATUS1
                               EQU              0x560000b0  ;Chip ID(0x32440000
                                                            )
   79 00000000 560000B4 
                       GSTATUS2
                               EQU              0x560000b4  ;Reset type
   80 00000000 560000B8 
                       GSTATUS3
                               EQU              0x560000b8  ;Saved data0(32-bit
                                                            ) before entering P
                                                            OWER_OFF mode
   81 00000000 560000BC 
                       GSTATUS4
                               EQU              0x560000bc  ;Saved data1(32-bit
                                                            ) before entering P
                                                            OWER_OFF mode
   82 00000000         
   83 00000000         ;Added for 2440     ; DonGo
   84 00000000 560000CC 
                       MSLCON  EQU              0x560000cc  ;Memory sleep contr
                                                            ol register
   85 00000000         
   86 00000000         ;=================
   87 00000000         ; WATCH DOG TIMER
   88 00000000         ;=================
   89 00000000 53000000 
                       WTCON   EQU              0x53000000  ;Watch-dog timer mo
                                                            de
   90 00000000 53000004 
                       WTDAT   EQU              0x53000004  ;Watch-dog timer da
                                                            ta
   91 00000000 53000008 
                       WTCNT   EQU              0x53000008  ;Eatch-dog timer co
                                                            unt
   92 00000000         



ARM Macro Assembler    Page 9 


   93 00000000         ;=================
   94 00000000         ; Nand Flash
   95 00000000         ;=================
   96 00000000 4E000000 
                       NFCONF  EQU              0x4E000000  ;NAND Flash configu
                                                            ration
   97 00000000 4E000004 
                       NFCONT  EQU              0x4E000004  ;NAND Flash control
                                                            
   98 00000000 4E000008 
                       NFCMD   EQU              0x4E000008  ;NAND Flash command
                                                            
   99 00000000 4E00000C 
                       NFADDR  EQU              0x4E00000C  ;NAND Flash address
                                                            
  100 00000000 4E000010 
                       NFDATA  EQU              0x4E000010  ;NAND Flash data
  101 00000000 4E000010 
                       NFDATA8 EQU              0x4E000010  ;NAND Flash data
  102 00000000 4E000014 
                       NFMECCD0
                               EQU              0x4E000014  ;NAND Flash ECC for
                                                             Main Area
  103 00000000 4E000018 
                       NFMECCD1
                               EQU              0x4E000018
  104 00000000 4E00001C 
                       NFSECCD EQU              0x4E00001C  ;NAND Flash ECC for
                                                             Spare Area
  105 00000000 4E000020 
                       NFSTAT  EQU              0x4E000020  ;NAND Flash operati
                                                            on status
  106 00000000 4E000024 
                       NFESTAT0
                               EQU              0x4E000024
  107 00000000 4E000028 
                       NFESTAT1
                               EQU              0x4E000028
  108 00000000 4E00002C 
                       NFMECC0 EQU              0x4E00002C
  109 00000000 4E000030 
                       NFMECC1 EQU              0x4E000030
  110 00000000 4E000034 
                       NFSECC  EQU              0x4E000034
  111 00000000 4E000038 
                       NFSBLK  EQU              0x4E000038  ;NAND Flash Start b
                                                            lock address
  112 00000000 4E00003C 
                       NFEBLK  EQU              0x4E00003C  ;NAND Flash End blo
                                                            ck address
  113 00000000         
  114 00000000                 END
   15 00000000         
   16 00000000 00400000 
                       BIT_SELFREFRESH
                               EQU              (1<<22)
   17 00000000         
   18 00000000         
   19 00000000         ;DDR INIT VALUE



ARM Macro Assembler    Page 10 


   20 00000000 0004920D 
                       CFG_BANK_CFG_VAL
                               EQU              0x0004920d
   21 00000000 04000040 
                       CFG_BANK_CON1_VAL
                               EQU              0x04000040
   22 00000000 0057003A 
                       CFG_BANK_CON2_VAL
                               EQU              0x0057003a
   23 00000000 80000030 
                       CFG_BANK_CON3_VAL
                               EQU              0x80000030
   24 00000000 00000313 
                       CFG_BANK_REFRESH_VAL
                               EQU              0x00000313
   25 00000000         
   26 00000000         ;Pre-defined constants
   27 00000000 00000010 
                       USERMODE
                               EQU              0x10
   28 00000000 00000011 
                       FIQMODE EQU              0x11
   29 00000000 00000012 
                       IRQMODE EQU              0x12
   30 00000000 00000013 
                       SVCMODE EQU              0x13
   31 00000000 00000017 
                       ABORTMODE
                               EQU              0x17
   32 00000000 0000001B 
                       UNDEFMODE
                               EQU              0x1b
   33 00000000 0000001F 
                       MODEMASK
                               EQU              0x1f
   34 00000000 000000C0 
                       NOINT   EQU              0xc0
   35 00000000         
   36 00000000         ;The location of stacks
   37 00000000 33FF4800 
                       UserStack
                               EQU              (_STACK_BASEADDRESS-0x3800) 
                                                            ;0x33ff4800 ~
   38 00000000 33FF5800 
                       SVCStack
                               EQU              (_STACK_BASEADDRESS-0x2800) 
                                                            ;0x33ff5800 ~
   39 00000000 33FF5C00 
                       UndefStack
                               EQU              (_STACK_BASEADDRESS-0x2400) 
                                                            ;0x33ff5c00 ~
   40 00000000 33FF6000 
                       AbortStack
                               EQU              (_STACK_BASEADDRESS-0x2000) 
                                                            ;0x33ff6000 ~
   41 00000000 33FF7000 
                       IRQStack
                               EQU              (_STACK_BASEADDRESS-0x1000) 
                                                            ;0x33ff7000 ~



ARM Macro Assembler    Page 11 


   42 00000000 33FF8000 
                       FIQStack
                               EQU              (_STACK_BASEADDRESS-0x0) 
                                                            ;0x33ff8000 ~
   43 00000000         
   44 00000000                 MACRO
   45 00000000                 MOV_PC_LR
   46 00000000                 bx               lr
   47 00000000                 MEND
   48 00000000         
   49 00000000                 MACRO
   50 00000000                 MOVEQ_PC_LR
   51 00000000                 [                THUMBCODE
   52 00000000                 bxeq             lr
   53 00000000                 |
   54 00000000                 moveq            pc,lr
   55 00000000                 ]
   56 00000000                 MEND
   57 00000000         
   58 00000000                 MACRO
   59 00000000         $HandlerLabel
                               HANDLER          $HandleLabel
   60 00000000         
   61 00000000         $HandlerLabel
   62 00000000                 sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 00000000                 stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 00000000                 ldr              r0,=$HandleLabel ;load the addr
                                                            ess of HandleXXX to
                                                             r0
   65 00000000                 ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 00000000                 str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 00000000                 ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
   68 00000000                 MEND
   69 00000000         
   70 00000000                 IMPORT           |Image$$ER_ROM1$$Base| 
                                                            ;Base of ROM code
   71 00000000                 IMPORT           |Image$$ER_ROM1$$Limit| ;End of
                                                             ROM code (=start o
                                                            f ROM data)
   72 00000000                 IMPORT           |Image$$RW_RAM1$$Base| ;Base of
                                                             RAM to initialise
   73 00000000                 IMPORT           |Image$$RW_RAM1$$Base| ;Base an
                                                            d limit of area
   74 00000000                 IMPORT           |Image$$RW_RAM1$$Limit| 
                                                            ;to zero initialise
                                                            
   75 00000000         



ARM Macro Assembler    Page 12 


   76 00000000                 IMPORT           MMU_SetAsyncBusMode
   77 00000000                 IMPORT           MMU_SetFastBusMode
   78 00000000         
   79 00000000                 IMPORT           Main        ;The main entry of 
                                                            mon program
   80 00000000         
   81 00000000                 AREA             RESET,CODE,READONLY
   82 00000000         
   83 00000000                 PRESERVE8
   84 00000000         
   85 00000000                 ENTRY
   86 00000000         
   87 00000000                 EXPORT           __ENTRY
   88 00000000         __ENTRY
   89 00000000         start
   90 00000000         ResetEntry
   91 00000000         ;1)The code, which converts to Big-endian, should be in 
                       little endian code.
   92 00000000         ;2)The following little endian code will be compiled in 
                       Big-Endian mode.
   93 00000000         ;  The code byte order should be changed as the memory b
                       us width.
   94 00000000         ;3)The pseudo instruction,DCD can not be used here becau
                       se the linker generates error.
   95 00000000                 ASSERT           :DEF:ENDIAN_CHANGE
   96 00000000                 [                ENDIAN_CHANGE
  110 00000000 EA000045        b                ResetHandler
  111 00000004                 ]
  112 00000004 EA00001B        b                HandlerUndef ;handler for Undef
                                                            ined mode
  113 00000008 EA000020        b                HandlerSWI  ;handler for SWI in
                                                            terrupt
  114 0000000C EA00002B        b                HandlerPabort 
                                                            ;handler for PAbort
                                                            
  115 00000010 EA000024        b                HandlerDabort 
                                                            ;handler for DAbort
                                                            
  116 00000014 EAFFFFFE        b                .           ;reserved
  117 00000018 EA000010        b                HandlerIRQ  ;handler for IRQ in
                                                            terrupt
  118 0000001C EA000009        b                HandlerFIQ  ;handler for FIQ in
                                                            terrupt
  119 00000020         
  120 00000020         ;@0x20
  121 00000020 EA000078        b                EnterPWDN   ; Must be @0x20.
  122 00000024         ChangeBigEndian
  123 00000024         ;@0x24
  124 00000024                 [                ENTRY_BUS_WIDTH=32
  128                          ]
  129 00000024                 [                ENTRY_BUS_WIDTH=16
  130 00000024 0F10EE11        DCD              0x0f10ee11
  131 00000028 0080E380        DCD              0x0080e380
  132 0000002C 0F10EE01        DCD              0x0f10ee01
  133 00000030                 ]
  134 00000030                 [                ENTRY_BUS_WIDTH=8
  138                          ]
  139 00000030 FFFFFFFF        DCD              0xffffffff  ;swinv 0xffffff is 
                                                            similar with NOP an



ARM Macro Assembler    Page 13 


                                                            d run well in both 
                                                            endian mode.
  140 00000034 FFFFFFFF        DCD              0xffffffff
  141 00000038 FFFFFFFF        DCD              0xffffffff
  142 0000003C FFFFFFFF        DCD              0xffffffff
  143 00000040 FFFFFFFF        DCD              0xffffffff
  144 00000044 EA000034        b                ResetHandler
  145 00000048         
  146 00000048         HandlerFIQ
                               HANDLER          HandleFIQ
   60 00000048         
   61 00000048         HandlerFIQ
   62 00000048 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 0000004C E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 00000050 E59F00A4        ldr              r0,=HandleFIQ ;load the address
                                                             of HandleXXX to r0
                                                            
   65 00000054 E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 00000058 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 0000005C E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  147 00000060         HandlerIRQ
                               HANDLER          HandleIRQ
   60 00000060         
   61 00000060         HandlerIRQ
   62 00000060 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 00000064 E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 00000068 E59F0090        ldr              r0,=HandleIRQ ;load the address
                                                             of HandleXXX to r0
                                                            
   65 0000006C E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 00000070 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 00000074 E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  148 00000078         HandlerUndef
                               HANDLER          HandleUndef
   60 00000078         



ARM Macro Assembler    Page 14 


   61 00000078         HandlerUndef
   62 00000078 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 0000007C E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 00000080 E59F007C        ldr              r0,=HandleUndef ;load the addre
                                                            ss of HandleXXX to 
                                                            r0
   65 00000084 E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 00000088 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 0000008C E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  149 00000090         HandlerSWI
                               HANDLER          HandleSWI
   60 00000090         
   61 00000090         HandlerSWI
   62 00000090 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 00000094 E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 00000098 E59F0068        ldr              r0,=HandleSWI ;load the address
                                                             of HandleXXX to r0
                                                            
   65 0000009C E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 000000A0 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 000000A4 E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  150 000000A8         HandlerDabort
                               HANDLER          HandleDabort
   60 000000A8         
   61 000000A8         HandlerDabort
   62 000000A8 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 000000AC E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 000000B0 E59F0054        ldr              r0,=HandleDabort ;load the addr
                                                            ess of HandleXXX to
                                                             r0



ARM Macro Assembler    Page 15 


   65 000000B4 E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 000000B8 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 000000BC E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  151 000000C0         HandlerPabort
                               HANDLER          HandlePabort
   60 000000C0         
   61 000000C0         HandlerPabort
   62 000000C0 E24DD004        sub              sp,sp,#4    ;decrement sp(to st
                                                            ore jump address)
   63 000000C4 E92D0001        stmfd            sp!,{r0}    ;PUSH the work regi
                                                            ster to stack(lr do
                                                            es not push because
                                                             it return to origi
                                                            nal address)
   64 000000C8 E59F0040        ldr              r0,=HandlePabort ;load the addr
                                                            ess of HandleXXX to
                                                             r0
   65 000000CC E5900000        ldr              r0,[r0]     ;load the contents(
                                                            service routine sta
                                                            rt address) of Hand
                                                            leXXX
   66 000000D0 E58D0004        str              r0,[sp,#4]  ;store the contents
                                                            (ISR) of HandleXXX 
                                                            to stack
   67 000000D4 E8BD8001        ldmfd            sp!,{r0,pc} ;POP the work regis
                                                            ter and pc(jump to 
                                                            ISR)
  152 000000D8         
  153 000000D8         IsrIRQ
  154 000000D8 E24DD004        sub              sp,sp,#4    ;reserved for PC
  155 000000DC E92D0300        stmfd            sp!,{r8-r9}
  156 000000E0         
  157 000000E0 E59F902C        ldr              r9,=INTOFFSET
  158 000000E4 E5999000        ldr              r9,[r9]
  159 000000E8 E59F8028        ldr              r8,=HandleEINT0
  160 000000EC E0888109        add              r8,r8,r9,lsl #2
  161 000000F0 E5988000        ldr              r8,[r8]
  162 000000F4 E58D8008        str              r8,[sp,#8]
  163 000000F8 E8BD8300        ldmfd            sp!,{r8-r9,pc}
  164 000000FC         
  165 000000FC 33FFFF1C 
              33FFFF18 
              33FFFF04 
              33FFFF08 
              33FFFF10 
              33FFFF0C 
              4A000014 
              33FFFF20         LTORG
  166 0000011C         
  167 0000011C         ;=======
  168 0000011C         ; ENTRY
  169 0000011C         ;=======



ARM Macro Assembler    Page 16 


  170 0000011C         ResetHandler
  171 0000011C E3A00453        ldr              r0,=WTCON   ;watch dog disable
  172 00000120 E3A01000        ldr              r1,=0x0
  173 00000124 E5801000        str              r1,[r0]
  174 00000128         
  175 00000128 E59F007C        ldr              r0,=INTMSK
  176 0000012C E3E01000        ldr              r1,=0xffffffff ;all interrupt d
                                                            isable
  177 00000130 E5801000        str              r1,[r0]
  178 00000134         
  179 00000134 E59F0074        ldr              r0,=INTSUBMSK
  180 00000138 E59F1074        ldr              r1,=0x7fff  ;all sub interrupt 
                                                            disable
  181 0000013C E5801000        str              r1,[r0]
  182 00000140         
  183 00000140 E59FD070        ldr              sp, =0x40002000
  184 00000144         ;clock_init
  185 00000144                 IMPORT           clock_init
  186 00000144 EBFFFFFE        bl               clock_init
  187 00000148         
  188 00000148         
  189 00000148         ;DDR INIT
  190 00000148         ;DDR´æ´¢Æ÷³õÊ¼»¯
  191 00000148         
  192 00000148         ;IMPORT  sdr_ctrl_asm_init
  193 00000148         ;ldr r0, =sdram_bank_set_val
  194 00000148         ;bl sdr_ctrl_asm_init
  195 00000148         
  196 00000148         
  197 00000148         
  198 00000148         ;Initialize stacks
  199 00000148 EB000003        bl               InitStacks
  200 0000014C         
  201 0000014C         ;=======================================================
                       ====
  202 0000014C         
  203 0000014C         
  204 0000014C         ;=======================================================
                       ====
  205 0000014C         
  206 0000014C         ;=======================================================
                       ====
  207 0000014C         
  208 0000014C         
  209 0000014C         ;=======================================================
                       ====
  210 0000014C         ; Setup IRQ handler
  211 0000014C E51F0054        ldr              r0,=HandleIRQ ;This routine is 
                                                            needed
  212 00000150 E59F1068        ldr              r1,=IsrIRQ  ;if there is not 's
                                                            ubs pc,lr,#4' at 0x
                                                            18, 0x1c
  213 00000154 E5801000        str              r1,[r0]
  214 00000158         
  215 00000158         
  216 00000158         
  217 00000158         on_ddr
  218 00000158 EAFFFFFE        b                Main
  219 0000015C         



ARM Macro Assembler    Page 17 


  220 0000015C         
  221 0000015C         ;function initializing stacks
  222 0000015C         InitStacks
  223 0000015C         ;Do not use DRAM,such as stmfd,ldmfd......
  224 0000015C         ;SVCstack is initialized before
  225 0000015C         ;Under toolkit ver 2.5, 'msr cpsr,r1' can be used instea
                       d of 'msr cpsr_cxsf,r1'
  226 0000015C E10F0000        mrs              r0,cpsr
  227 00000160 E3C0001F        bic              r0,r0,#MODEMASK
  228 00000164 E38010DB        orr              r1,r0,#UNDEFMODE:OR:NOINT
  229 00000168 E12FF001        msr              cpsr_cxsf,r1 ;UndefMode
  230 0000016C E59FD050        ldr              sp,=UndefStack ; UndefStack=0x3
                                                            3FF_5C00
  231 00000170         
  232 00000170 E38010D7        orr              r1,r0,#ABORTMODE:OR:NOINT
  233 00000174 E12FF001        msr              cpsr_cxsf,r1 ;AbortMode
  234 00000178 E59FD048        ldr              sp,=AbortStack ; AbortStack=0x3
                                                            3FF_6000
  235 0000017C         
  236 0000017C E38010D2        orr              r1,r0,#IRQMODE:OR:NOINT
  237 00000180 E12FF001        msr              cpsr_cxsf,r1 ;IRQMode
  238 00000184 E59FD040        ldr              sp,=IRQStack ; IRQStack=0x33FF_
                                                            7000
  239 00000188         
  240 00000188 E38010D1        orr              r1,r0,#FIQMODE:OR:NOINT
  241 0000018C E12FF001        msr              cpsr_cxsf,r1 ;FIQMode
  242 00000190 E59FD038        ldr              sp,=FIQStack ; FIQStack=0x33FF_
                                                            8000
  243 00000194         
  244 00000194 E3C000DF        bic              r0,r0,#MODEMASK:OR:NOINT
  245 00000198 E3801013        orr              r1,r0,#SVCMODE
  246 0000019C E12FF001        msr              cpsr_cxsf,r1 ;SVCMode
  247 000001A0 E59FD02C        ldr              sp,=SVCStack ; SVCStack=0x33FF_
                                                            5800
  248 000001A4         
  249 000001A4         ;USER mode has not be initialized.
  250 000001A4         
  251 000001A4 E12FFF1E        bx               lr
  252 000001A8         ;The LR register will not be valid if the current mode i
                       s not SVC mode.
  253 000001A8         
  254 000001A8         ;=======================================================
                       ====
  255 000001A8         loop
  256 000001A8 EAFFFFFE        b                loop
  257 000001AC         
  258 000001AC         ;=======================================================
                       ====
  259 000001AC         
  260 000001AC 4A000008 
              4A00001C 
              00007FFF 
              40002000 
              00000000 
              00000000 
              33FF5C00 
              33FF6000 
              33FF7000 
              33FF8000 



ARM Macro Assembler    Page 18 


              33FF5800         LTORG
  261 000001D8         
  262 000001D8         ;GCS0->SST39VF1601
  263 000001D8         ;GCS1->16c550
  264 000001D8         ;GCS2->IDE
  265 000001D8         ;GCS3->CS8900
  266 000001D8         ;GCS4->DM9000
  267 000001D8         ;GCS5->CF Card
  268 000001D8         ;GCS6->SDRAM
  269 000001D8         ;GCS7->unused
  270 000001D8         
  271 000001D8         SMRDATA DATA
  272 000001D8         ; Memory configuration should be optimized for best perf
                       ormance
  273 000001D8         ; The following parameter is not optimized.
  274 000001D8         ; Memory access cycle parameter strategy
  275 000001D8         ; 1) The memory settings is  safe parameters even at HCL
                       K=75Mhz.
  276 000001D8         ; 2) SDRAM refresh period is for HCLK<=75Mhz.
  277 000001D8         
  278 000001D8         sdram_bank_set_val
  279 000001D8 0004920D        DCD              CFG_BANK_CFG_VAL
  280 000001DC 04000040        DCD              CFG_BANK_CON1_VAL
  281 000001E0 0057003A        DCD              CFG_BANK_CON2_VAL
  282 000001E4 80000030        DCD              CFG_BANK_CON3_VAL
  283 000001E8 00000313        DCD              CFG_BANK_REFRESH_VAL
  284 000001EC         
  285 000001EC 00000000 
                       BaseOfROM
                               DCD              |Image$$ER_ROM1$$Base|
  286 000001F0 00000000 
                       TopOfROM
                               DCD              |Image$$ER_ROM1$$Limit|
  287 000001F4 00000000 
                       BaseOfBSS
                               DCD              |Image$$RW_RAM1$$Base|
  288 000001F8 00000000 
                       BaseOfZero
                               DCD              |Image$$RW_RAM1$$Base|
  289 000001FC 00000000 
                       EndOfBSS
                               DCD              |Image$$RW_RAM1$$Limit|
  290 00000200 00000000 
                       bss_start
                               DCD              |Image$$RW_RAM1$$Base|
  291 00000204 00000000 
                       bss_end DCD              |Image$$RW_RAM1$$Limit|
  292 00000208         
  293 00000208                 ALIGN
  294 00000208         
  295 00000208         ;Function for entering power down mode
  296 00000208         ; 1. SDRAM should be in self-refresh mode.
  297 00000208         ; 2. All interrupt should be maksked for SDRAM/DRAM self
                       -refresh.
  298 00000208         ; 3. LCD controller should be disabled for SDRAM/DRAM se
                       lf-refresh.
  299 00000208         ; 4. The I-cache may have to be turned on.
  300 00000208         ; 5. The location of the following code may have not to 
                       be changed.



ARM Macro Assembler    Page 19 


  301 00000208         
  302 00000208         ;void EnterPWDN(int CLKCON);
  303 00000208         EnterPWDN
  304 00000208 E1A02000        mov              r2,r0       ;r2=rCLKCON
  305 0000020C E3100008        tst              r0,#0x8     ;SLEEP mode?
  306 00000210 1A00000F        bne              ENTER_SLEEP
  307 00000214         
  308 00000214         ENTER_STOP
  309 00000214 E59F00B4        ldr              r0,=REFRESH
  310 00000218 E5903000        ldr              r3,[r0]     ;r3=rREFRESH
  311 0000021C E1A01003        mov              r1, r3
  312 00000220 E3811501        orr              r1, r1, #BIT_SELFREFRESH
  313 00000224 E5801000        str              r1, [r0]    ;Enable SDRAM self-
                                                            refresh
  314 00000228         
  315 00000228 E3A01010        mov              r1,#16      ;wait until self-re
                                                            fresh is issued. ma
                                                            y not be needed.
  316 0000022C E2511001 
                       0       subs             r1,r1,#1
  317 00000230 1AFFFFFD        bne              %B0
  318 00000234         
  319 00000234 E59F0098        ldr              r0,=CLKCON  ;enter STOP mode.
  320 00000238 E5802000        str              r2,[r0]
  321 0000023C         
  322 0000023C E3A01020        mov              r1,#32
  323 00000240 E2511001 
                       0       subs             r1,r1,#1    ;1) wait until the 
                                                            STOP mode is in eff
                                                            ect.
  324 00000244 1AFFFFFD        bne              %B0         ;2) Or wait here un
                                                            til the CPU&Periphe
                                                            rals will be turned
                                                            -off
  325 00000248         ;   Entering SLEEP mode, only the reset by wake-up is av
                       ailable.
  326 00000248         
  327 00000248 E59F0080        ldr              r0,=REFRESH ;exit from SDRAM se
                                                            lf refresh mode.
  328 0000024C E5803000        str              r3,[r0]
  329 00000250         
  330 00000250                 MOV_PC_LR
   46 00000250 E12FFF1E        bx               lr
  331 00000254         
  332 00000254         ENTER_SLEEP
  333 00000254         ;NOTE.
  334 00000254         ;1) rGSTATUS3 should have the return address after wake-
                       up from SLEEP mode.
  335 00000254         
  336 00000254 E59F0074        ldr              r0,=REFRESH
  337 00000258 E5901000        ldr              r1,[r0]     ;r1=rREFRESH
  338 0000025C E3811501        orr              r1, r1, #BIT_SELFREFRESH
  339 00000260 E5801000        str              r1, [r0]    ;Enable SDRAM self-
                                                            refresh
  340 00000264         
  341 00000264 E3A01010        mov              r1,#16      ;Wait until self-re
                                                            fresh is issued,whi
                                                            ch may not be neede
                                                            d.



ARM Macro Assembler    Page 20 


  342 00000268 E2511001 
                       0       subs             r1,r1,#1
  343 0000026C 1AFFFFFD        bne              %B0
  344 00000270         
  345 00000270 E59F1060        ldr              r1,=MISCCR
  346 00000274 E5910000        ldr              r0,[r1]
  347 00000278 E380080E        orr              r0,r0,#(7<<17) ;Set SCLK0=0, SC
                                                            LK1=0, SCKE=0.
  348 0000027C E5810000        str              r0,[r1]
  349 00000280         
  350 00000280 E59F004C        ldr              r0,=CLKCON  ; Enter sleep mode
  351 00000284 E5802000        str              r2,[r0]
  352 00000288         
  353 00000288 EAFFFFFE        b                .           ;CPU will die here.
                                                            
  354 0000028C         
  355 0000028C         
  356 0000028C         WAKEUP_SLEEP
  357 0000028C         ;Release SCLKn after wake-up from the SLEEP mode.
  358 0000028C E59F1044        ldr              r1,=MISCCR
  359 00000290 E5910000        ldr              r0,[r1]
  360 00000294 E3C0080E        bic              r0,r0,#(7<<17) ;SCLK0:0->SCLK, 
                                                            SCLK1:0->SCLK, SCKE
                                                            :0->=SCKE.
  361 00000298 E5810000        str              r0,[r1]
  362 0000029C         
  363 0000029C         ;Set memory control registers
  364 0000029C E59F0038        ldr              r0,=SMRDATA ;be careful! 
  365 000002A0 E3A01312        ldr              r1,=BWSCON  ;BWSCON Address
  366 000002A4 E2802034        add              r2, r0, #52 ;End address of SMR
                                                            DATA
  367 000002A8         0
  368 000002A8 E4903004        ldr              r3, [r0], #4
  369 000002AC E4813004        str              r3, [r1], #4
  370 000002B0 E1520000        cmp              r2, r0
  371 000002B4 1AFFFFFB        bne              %B0
  372 000002B8         
  373 000002B8 E3A01C01        mov              r1,#256
  374 000002BC E2511001 
                       0       subs             r1,r1,#1    ;1) wait until the 
                                                            SelfRefresh is rele
                                                            ased.
  375 000002C0 1AFFFFFD        bne              %B0
  376 000002C4         
  377 000002C4 E59F1014        ldr              r1,=GSTATUS3 ;GSTATUS3 has the 
                                                            start address just 
                                                            after SLEEP wake-up
                                                            
  378 000002C8 E5910000        ldr              r0,[r1]
  379 000002CC         
  380 000002CC E12FFF1E        bx               lr
  381 000002D0         
  382 000002D0                 ALIGN
  383 000002D0         
  384 000002D0 48000024 
              4C00000C 
              56000080 
              00000000 
              560000B8         AREA             RamData, DATA, READWRITE



ARM Macro Assembler    Page 21 


  385 00000000         
  386 00000000                 ^                _ISR_STARTADDRESS ; _ISR_STARTA
                                                            DDRESS=0x33FFFF00
  387 00000000 33FFFF00 
                       HandleReset
                               #                4
  388 00000000 33FFFF04 
                       HandleUndef
                               #                4
  389 00000000 33FFFF08 
                       HandleSWI
                               #                4
  390 00000000 33FFFF0C 
                       HandlePabort
                               #                4
  391 00000000 33FFFF10 
                       HandleDabort
                               #                4
  392 00000000 33FFFF14 
                       HandleReserved
                               #                4
  393 00000000 33FFFF18 
                       HandleIRQ
                               #                4
  394 00000000 33FFFF1C 
                       HandleFIQ
                               #                4
  395 00000000         
  396 00000000         ;Do not use the label 'IntVectorTable',
  397 00000000         ;The value of IntVectorTable is different with the addre
                       ss you think it may be.
  398 00000000         ;IntVectorTable
  399 00000000         ;@0x33FF_FF20
  400 00000000 33FFFF20 
                       HandleEINT0
                               #                4
  401 00000000 33FFFF24 
                       HandleEINT1
                               #                4
  402 00000000 33FFFF28 
                       HandleEINT2
                               #                4
  403 00000000 33FFFF2C 
                       HandleEINT3
                               #                4
  404 00000000 33FFFF30 
                       HandleEINT4_7
                               #                4
  405 00000000 33FFFF34 
                       HandleEINT8_23
                               #                4
  406 00000000 33FFFF38 
                       HandleCAM
                               #                4           ; Added for 2440.
  407 00000000 33FFFF3C 
                       HandleBATFLT
                               #                4
  408 00000000 33FFFF40 
                       HandleTICK



ARM Macro Assembler    Page 22 


                               #                4
  409 00000000 33FFFF44 
                       HandleWDT
                               #                4
  410 00000000 33FFFF48 
                       HandleTIMER0
                               #                4
  411 00000000 33FFFF4C 
                       HandleTIMER1
                               #                4
  412 00000000 33FFFF50 
                       HandleTIMER2
                               #                4
  413 00000000 33FFFF54 
                       HandleTIMER3
                               #                4
  414 00000000 33FFFF58 
                       HandleTIMER4
                               #                4
  415 00000000 33FFFF5C 
                       HandleUART2
                               #                4
  416 00000000         ;@0x33FF_FF60
  417 00000000 33FFFF60 
                       HandleLCD
                               #                4
  418 00000000 33FFFF64 
                       HandleDMA0
                               #                4
  419 00000000 33FFFF68 
                       HandleUART3
                               #                4
  420 00000000 33FFFF6C 
                       HandleCFCON
                               #                4
  421 00000000 33FFFF70 
                       HandleSDI1
                               #                4
  422 00000000 33FFFF74 
                       HandleSDI0
                               #                4
  423 00000000 33FFFF78 
                       HandleSPI0
                               #                4
  424 00000000 33FFFF7C 
                       HandleUART1
                               #                4
  425 00000000 33FFFF80 
                       HandleNFCON
                               #                4           ; Added for 2451.
  426 00000000 33FFFF84 
                       HandleUSBD
                               #                4
  427 00000000 33FFFF88 
                       HandleUSBH
                               #                4
  428 00000000 33FFFF8C 
                       HandleIIC
                               #                4



ARM Macro Assembler    Page 23 


  429 00000000 33FFFF90 
                       HandleUART0
                               #                4
  430 00000000 33FFFF94 
                       HandleSPI1
                               #                4
  431 00000000 33FFFF98 
                       HandleRTC
                               #                4
  432 00000000 33FFFF9C 
                       HandleADC
                               #                4
  433 00000000         ;@0x33FF_FFA0
  434 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM926EJ-S --apcs=inter
work --depend=.\objects\2451init.d -o.\objects\2451init.o -I"D:\KEIL FOR ARM\AR
M\RV31\INC" -I"D:\KEIL FOR ARM\ARM\CMSIS\Include" --predefine="__UVISION_VERSIO
N SETA 514" --list=.\listings\2451init.lst startup\2451init.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 0000022C

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000240

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000268

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000002A8

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 000002BC

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
BaseOfBSS 000001F4

Symbol: BaseOfBSS
   Definitions
      At line 287 in file startup\2451init.s
   Uses
      None
Comment: BaseOfBSS unused
BaseOfROM 000001EC

Symbol: BaseOfROM
   Definitions
      At line 285 in file startup\2451init.s
   Uses
      None
Comment: BaseOfROM unused
BaseOfZero 000001F8

Symbol: BaseOfZero



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 288 in file startup\2451init.s
   Uses
      None
Comment: BaseOfZero unused
ChangeBigEndian 00000024

Symbol: ChangeBigEndian
   Definitions
      At line 122 in file startup\2451init.s
   Uses
      None
Comment: ChangeBigEndian unused
ENTER_SLEEP 00000254

Symbol: ENTER_SLEEP
   Definitions
      At line 332 in file startup\2451init.s
   Uses
      At line 306 in file startup\2451init.s
Comment: ENTER_SLEEP used once
ENTER_STOP 00000214

Symbol: ENTER_STOP
   Definitions
      At line 308 in file startup\2451init.s
   Uses
      None
Comment: ENTER_STOP unused
EndOfBSS 000001FC

Symbol: EndOfBSS
   Definitions
      At line 289 in file startup\2451init.s
   Uses
      None
Comment: EndOfBSS unused
EnterPWDN 00000208

Symbol: EnterPWDN
   Definitions
      At line 303 in file startup\2451init.s
   Uses
      At line 121 in file startup\2451init.s
Comment: EnterPWDN used once
HandlerDabort 000000A8

Symbol: HandlerDabort
   Definitions
      At line 61 in macro HANDLER
      at line 150 in file startup\2451init.s
   Uses
      At line 115 in file startup\2451init.s
Comment: HandlerDabort used once
HandlerFIQ 00000048

Symbol: HandlerFIQ
   Definitions
      At line 61 in macro HANDLER



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      at line 146 in file startup\2451init.s
   Uses
      At line 118 in file startup\2451init.s
Comment: HandlerFIQ used once
HandlerIRQ 00000060

Symbol: HandlerIRQ
   Definitions
      At line 61 in macro HANDLER
      at line 147 in file startup\2451init.s
   Uses
      At line 117 in file startup\2451init.s
Comment: HandlerIRQ used once
HandlerPabort 000000C0

Symbol: HandlerPabort
   Definitions
      At line 61 in macro HANDLER
      at line 151 in file startup\2451init.s
   Uses
      At line 114 in file startup\2451init.s
Comment: HandlerPabort used once
HandlerSWI 00000090

Symbol: HandlerSWI
   Definitions
      At line 61 in macro HANDLER
      at line 149 in file startup\2451init.s
   Uses
      At line 113 in file startup\2451init.s
Comment: HandlerSWI used once
HandlerUndef 00000078

Symbol: HandlerUndef
   Definitions
      At line 61 in macro HANDLER
      at line 148 in file startup\2451init.s
   Uses
      At line 112 in file startup\2451init.s
Comment: HandlerUndef used once
InitStacks 0000015C

Symbol: InitStacks
   Definitions
      At line 222 in file startup\2451init.s
   Uses
      At line 199 in file startup\2451init.s
Comment: InitStacks used once
IsrIRQ 000000D8

Symbol: IsrIRQ
   Definitions
      At line 153 in file startup\2451init.s
   Uses
      At line 212 in file startup\2451init.s
Comment: IsrIRQ used once
RESET 00000000

Symbol: RESET



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 81 in file startup\2451init.s
   Uses
      None
Comment: RESET unused
ResetEntry 00000000

Symbol: ResetEntry
   Definitions
      At line 90 in file startup\2451init.s
   Uses
      None
Comment: ResetEntry unused
ResetHandler 0000011C

Symbol: ResetHandler
   Definitions
      At line 170 in file startup\2451init.s
   Uses
      At line 110 in file startup\2451init.s
      At line 144 in file startup\2451init.s

SMRDATA 000001D8

Symbol: SMRDATA
   Definitions
      At line 271 in file startup\2451init.s
   Uses
      At line 364 in file startup\2451init.s
Comment: SMRDATA used once
TopOfROM 000001F0

Symbol: TopOfROM
   Definitions
      At line 286 in file startup\2451init.s
   Uses
      None
Comment: TopOfROM unused
WAKEUP_SLEEP 0000028C

Symbol: WAKEUP_SLEEP
   Definitions
      At line 356 in file startup\2451init.s
   Uses
      None
Comment: WAKEUP_SLEEP unused
__ENTRY 00000000

Symbol: __ENTRY
   Definitions
      At line 88 in file startup\2451init.s
   Uses
      At line 87 in file startup\2451init.s
Comment: __ENTRY used once
bss_end 00000204

Symbol: bss_end
   Definitions
      At line 291 in file startup\2451init.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: bss_end unused
bss_start 00000200

Symbol: bss_start
   Definitions
      At line 290 in file startup\2451init.s
   Uses
      None
Comment: bss_start unused
loop 000001A8

Symbol: loop
   Definitions
      At line 255 in file startup\2451init.s
   Uses
      At line 256 in file startup\2451init.s
Comment: loop used once
on_ddr 00000158

Symbol: on_ddr
   Definitions
      At line 217 in file startup\2451init.s
   Uses
      None
Comment: on_ddr unused
sdram_bank_set_val 000001D8

Symbol: sdram_bank_set_val
   Definitions
      At line 278 in file startup\2451init.s
   Uses
      None
Comment: sdram_bank_set_val unused
start 00000000

Symbol: start
   Definitions
      At line 89 in file startup\2451init.s
   Uses
      None
Comment: start unused
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RamData 00000000

Symbol: RamData
   Definitions
      At line 384 in file startup\2451init.s
   Uses
      None
Comment: RamData unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABORTMODE 00000017

Symbol: ABORTMODE
   Definitions
      At line 31 in file startup\2451init.s
   Uses
      At line 232 in file startup\2451init.s
Comment: ABORTMODE used once
AbortStack 33FF6000

Symbol: AbortStack
   Definitions
      At line 40 in file startup\2451init.s
   Uses
      At line 234 in file startup\2451init.s
Comment: AbortStack used once
B0_PMC 00000000

Symbol: B0_PMC
   Definitions
      At line 46 in file startup\memcfg.inc
   Uses
      None
Comment: B0_PMC unused
B0_Tacc 00000007

Symbol: B0_Tacc
   Definitions
      At line 42 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tacc unused
B0_Tacp 00000001

Symbol: B0_Tacp
   Definitions
      At line 45 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tacp unused
B0_Tacs 00000003

Symbol: B0_Tacs
   Definitions
      At line 40 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tacs unused
B0_Tah 00000003

Symbol: B0_Tah
   Definitions
      At line 44 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tah unused
B0_Tcoh 00000003

Symbol: B0_Tcoh



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 43 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tcoh unused
B0_Tcos 00000003

Symbol: B0_Tcos
   Definitions
      At line 41 in file startup\memcfg.inc
   Uses
      None
Comment: B0_Tcos unused
B1_BWSCON 00000001

Symbol: B1_BWSCON
   Definitions
      At line 29 in file startup\memcfg.inc
   Uses
      None
Comment: B1_BWSCON unused
B1_PMC 00000000

Symbol: B1_PMC
   Definitions
      At line 55 in file startup\memcfg.inc
   Uses
      None
Comment: B1_PMC unused
B1_Tacc 00000006

Symbol: B1_Tacc
   Definitions
      At line 51 in file startup\memcfg.inc
   Uses
      None
Comment: B1_Tacc unused
B1_Tacp 00000000

Symbol: B1_Tacp
   Definitions
      At line 54 in file startup\memcfg.inc
   Uses
      None
Comment: B1_Tacp unused
B1_Tacs 00000001

Symbol: B1_Tacs
   Definitions
      At line 49 in file startup\memcfg.inc
   Uses
      None
Comment: B1_Tacs unused
B1_Tah 00000001

Symbol: B1_Tah
   Definitions
      At line 53 in file startup\memcfg.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: B1_Tah unused
B1_Tcoh 00000001

Symbol: B1_Tcoh
   Definitions
      At line 52 in file startup\memcfg.inc
   Uses
      None
Comment: B1_Tcoh unused
B1_Tcos 00000001

Symbol: B1_Tcos
   Definitions
      At line 50 in file startup\memcfg.inc
   Uses
      None
Comment: B1_Tcos unused
B2_BWSCON 00000001

Symbol: B2_BWSCON
   Definitions
      At line 30 in file startup\memcfg.inc
   Uses
      None
Comment: B2_BWSCON unused
B2_PMC 00000000

Symbol: B2_PMC
   Definitions
      At line 64 in file startup\memcfg.inc
   Uses
      None
Comment: B2_PMC unused
B2_Tacc 00000006

Symbol: B2_Tacc
   Definitions
      At line 60 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tacc unused
B2_Tacp 00000000

Symbol: B2_Tacp
   Definitions
      At line 63 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tacp unused
B2_Tacs 00000001

Symbol: B2_Tacs
   Definitions
      At line 58 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tacs unused
B2_Tah 00000001



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: B2_Tah
   Definitions
      At line 62 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tah unused
B2_Tcoh 00000001

Symbol: B2_Tcoh
   Definitions
      At line 61 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tcoh unused
B2_Tcos 00000001

Symbol: B2_Tcos
   Definitions
      At line 59 in file startup\memcfg.inc
   Uses
      None
Comment: B2_Tcos unused
B3_BWSCON 00000001

Symbol: B3_BWSCON
   Definitions
      At line 31 in file startup\memcfg.inc
   Uses
      None
Comment: B3_BWSCON unused
B3_PMC 00000000

Symbol: B3_PMC
   Definitions
      At line 73 in file startup\memcfg.inc
   Uses
      None
Comment: B3_PMC unused
B3_Tacc 00000006

Symbol: B3_Tacc
   Definitions
      At line 69 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tacc unused
B3_Tacp 00000000

Symbol: B3_Tacp
   Definitions
      At line 72 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tacp unused
B3_Tacs 00000001

Symbol: B3_Tacs
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 67 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tacs unused
B3_Tah 00000001

Symbol: B3_Tah
   Definitions
      At line 71 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tah unused
B3_Tcoh 00000001

Symbol: B3_Tcoh
   Definitions
      At line 70 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tcoh unused
B3_Tcos 00000001

Symbol: B3_Tcos
   Definitions
      At line 68 in file startup\memcfg.inc
   Uses
      None
Comment: B3_Tcos unused
B4_BWSCON 00000002

Symbol: B4_BWSCON
   Definitions
      At line 32 in file startup\memcfg.inc
   Uses
      None
Comment: B4_BWSCON unused
B4_PMC 00000000

Symbol: B4_PMC
   Definitions
      At line 82 in file startup\memcfg.inc
   Uses
      None
Comment: B4_PMC unused
B4_Tacc 00000006

Symbol: B4_Tacc
   Definitions
      At line 78 in file startup\memcfg.inc
   Uses
      None
Comment: B4_Tacc unused
B4_Tacp 00000000

Symbol: B4_Tacp
   Definitions
      At line 81 in file startup\memcfg.inc
   Uses
      None



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: B4_Tacp unused
B4_Tacs 00000001

Symbol: B4_Tacs
   Definitions
      At line 76 in file startup\memcfg.inc
   Uses
      None
Comment: B4_Tacs unused
B4_Tah 00000001

Symbol: B4_Tah
   Definitions
      At line 80 in file startup\memcfg.inc
   Uses
      None
Comment: B4_Tah unused
B4_Tcoh 00000001

Symbol: B4_Tcoh
   Definitions
      At line 79 in file startup\memcfg.inc
   Uses
      None
Comment: B4_Tcoh unused
B4_Tcos 00000001

Symbol: B4_Tcos
   Definitions
      At line 77 in file startup\memcfg.inc
   Uses
      None
Comment: B4_Tcos unused
B5_BWSCON 00000001

Symbol: B5_BWSCON
   Definitions
      At line 33 in file startup\memcfg.inc
   Uses
      None
Comment: B5_BWSCON unused
B5_PMC 00000000

Symbol: B5_PMC
   Definitions
      At line 91 in file startup\memcfg.inc
   Uses
      None
Comment: B5_PMC unused
B5_Tacc 00000006

Symbol: B5_Tacc
   Definitions
      At line 87 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tacc unused
B5_Tacp 00000000




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: B5_Tacp
   Definitions
      At line 90 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tacp unused
B5_Tacs 00000001

Symbol: B5_Tacs
   Definitions
      At line 85 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tacs unused
B5_Tah 00000001

Symbol: B5_Tah
   Definitions
      At line 89 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tah unused
B5_Tcoh 00000001

Symbol: B5_Tcoh
   Definitions
      At line 88 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tcoh unused
B5_Tcos 00000001

Symbol: B5_Tcos
   Definitions
      At line 86 in file startup\memcfg.inc
   Uses
      None
Comment: B5_Tcos unused
B6_BWSCON 00000002

Symbol: B6_BWSCON
   Definitions
      At line 34 in file startup\memcfg.inc
   Uses
      None
Comment: B6_BWSCON unused
B6_MT 00000003

Symbol: B6_MT
   Definitions
      At line 95 in file startup\memcfg.inc
   Uses
      None
Comment: B6_MT unused
B6_SCAN 00000001

Symbol: B6_SCAN
   Definitions
      At line 97 in file startup\memcfg.inc



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: B6_SCAN unused
B6_Trcd 00000001

Symbol: B6_Trcd
   Definitions
      At line 96 in file startup\memcfg.inc
   Uses
      None
Comment: B6_Trcd unused
B7_BWSCON 00000002

Symbol: B7_BWSCON
   Definitions
      At line 35 in file startup\memcfg.inc
   Uses
      None
Comment: B7_BWSCON unused
B7_MT 00000003

Symbol: B7_MT
   Definitions
      At line 100 in file startup\memcfg.inc
   Uses
      None
Comment: B7_MT unused
B7_SCAN 00000001

Symbol: B7_SCAN
   Definitions
      At line 102 in file startup\memcfg.inc
   Uses
      None
Comment: B7_SCAN unused
B7_Trcd 00000001

Symbol: B7_Trcd
   Definitions
      At line 101 in file startup\memcfg.inc
   Uses
      None
Comment: B7_Trcd unused
BANKCON0 48000004

Symbol: BANKCON0
   Definitions
      At line 16 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON0 unused
BANKCON1 48000008

Symbol: BANKCON1
   Definitions
      At line 17 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON1 unused



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

BANKCON2 4800000C

Symbol: BANKCON2
   Definitions
      At line 18 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON2 unused
BANKCON3 48000010

Symbol: BANKCON3
   Definitions
      At line 19 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON3 unused
BANKCON4 48000014

Symbol: BANKCON4
   Definitions
      At line 20 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON4 unused
BANKCON5 48000018

Symbol: BANKCON5
   Definitions
      At line 21 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON5 unused
BANKCON6 4800001C

Symbol: BANKCON6
   Definitions
      At line 22 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON6 unused
BANKCON7 48000020

Symbol: BANKCON7
   Definitions
      At line 23 in file startup\2451addr.inc
   Uses
      None
Comment: BANKCON7 unused
BANKSIZE 48000028

Symbol: BANKSIZE
   Definitions
      At line 25 in file startup\2451addr.inc
   Uses
      None
Comment: BANKSIZE unused
BIT_SELFREFRESH 00400000

Symbol: BIT_SELFREFRESH



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 16 in file startup\2451init.s
   Uses
      At line 312 in file startup\2451init.s
      At line 338 in file startup\2451init.s

BWSCON 48000000

Symbol: BWSCON
   Definitions
      At line 15 in file startup\2451addr.inc
   Uses
      At line 365 in file startup\2451init.s
Comment: BWSCON used once
CFG_BANK_CFG_VAL 0004920D

Symbol: CFG_BANK_CFG_VAL
   Definitions
      At line 20 in file startup\2451init.s
   Uses
      At line 279 in file startup\2451init.s
Comment: CFG_BANK_CFG_VAL used once
CFG_BANK_CON1_VAL 04000040

Symbol: CFG_BANK_CON1_VAL
   Definitions
      At line 21 in file startup\2451init.s
   Uses
      At line 280 in file startup\2451init.s
Comment: CFG_BANK_CON1_VAL used once
CFG_BANK_CON2_VAL 0057003A

Symbol: CFG_BANK_CON2_VAL
   Definitions
      At line 22 in file startup\2451init.s
   Uses
      At line 281 in file startup\2451init.s
Comment: CFG_BANK_CON2_VAL used once
CFG_BANK_CON3_VAL 80000030

Symbol: CFG_BANK_CON3_VAL
   Definitions
      At line 23 in file startup\2451init.s
   Uses
      At line 282 in file startup\2451init.s
Comment: CFG_BANK_CON3_VAL used once
CFG_BANK_REFRESH_VAL 00000313

Symbol: CFG_BANK_REFRESH_VAL
   Definitions
      At line 24 in file startup\2451init.s
   Uses
      At line 283 in file startup\2451init.s
Comment: CFG_BANK_REFRESH_VAL used once
CLKCON 4C00000C

Symbol: CLKCON
   Definitions
      At line 36 in file startup\2451addr.inc



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 319 in file startup\2451init.s
      At line 350 in file startup\2451init.s

CLKDIVN 4C000014

Symbol: CLKDIVN
   Definitions
      At line 38 in file startup\2451addr.inc
   Uses
      None
Comment: CLKDIVN unused
CLKSLOW 4C000010

Symbol: CLKSLOW
   Definitions
      At line 37 in file startup\2451addr.inc
   Uses
      None
Comment: CLKSLOW unused
DCKCON 56000084

Symbol: DCKCON
   Definitions
      At line 67 in file startup\2451addr.inc
   Uses
      None
Comment: DCKCON unused
DW16 00000001

Symbol: DW16
   Definitions
      At line 14 in file startup\memcfg.inc
   Uses
      At line 29 in file startup\memcfg.inc
      At line 30 in file startup\memcfg.inc
      At line 31 in file startup\memcfg.inc
      At line 33 in file startup\memcfg.inc

DW32 00000002

Symbol: DW32
   Definitions
      At line 15 in file startup\memcfg.inc
   Uses
      At line 32 in file startup\memcfg.inc
      At line 34 in file startup\memcfg.inc
      At line 35 in file startup\memcfg.inc

DW8 00000000

Symbol: DW8
   Definitions
      At line 13 in file startup\memcfg.inc
   Uses
      None
Comment: DW8 unused
EINTFLT0 56000094




ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

Symbol: EINTFLT0
   Definitions
      At line 71 in file startup\2451addr.inc
   Uses
      None
Comment: EINTFLT0 unused
EINTFLT1 56000098

Symbol: EINTFLT1
   Definitions
      At line 72 in file startup\2451addr.inc
   Uses
      None
Comment: EINTFLT1 unused
EINTFLT2 5600009C

Symbol: EINTFLT2
   Definitions
      At line 73 in file startup\2451addr.inc
   Uses
      None
Comment: EINTFLT2 unused
EINTFLT3 560000A0

Symbol: EINTFLT3
   Definitions
      At line 74 in file startup\2451addr.inc
   Uses
      None
Comment: EINTFLT3 unused
EINTMASK 560000A4

Symbol: EINTMASK
   Definitions
      At line 75 in file startup\2451addr.inc
   Uses
      None
Comment: EINTMASK unused
EINTPEND 560000A8

Symbol: EINTPEND
   Definitions
      At line 76 in file startup\2451addr.inc
   Uses
      None
Comment: EINTPEND unused
EXTINT0 56000088

Symbol: EXTINT0
   Definitions
      At line 68 in file startup\2451addr.inc
   Uses
      None
Comment: EXTINT0 unused
EXTINT1 5600008C

Symbol: EXTINT1
   Definitions
      At line 69 in file startup\2451addr.inc



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: EXTINT1 unused
EXTINT2 56000090

Symbol: EXTINT2
   Definitions
      At line 70 in file startup\2451addr.inc
   Uses
      None
Comment: EXTINT2 unused
FIQMODE 00000011

Symbol: FIQMODE
   Definitions
      At line 28 in file startup\2451init.s
   Uses
      At line 240 in file startup\2451init.s
Comment: FIQMODE used once
FIQStack 33FF8000

Symbol: FIQStack
   Definitions
      At line 42 in file startup\2451init.s
   Uses
      At line 242 in file startup\2451init.s
Comment: FIQStack used once
GPBCON 56000010

Symbol: GPBCON
   Definitions
      At line 61 in file startup\2451addr.inc
   Uses
      None
Comment: GPBCON unused
GPBDAT 56000014

Symbol: GPBDAT
   Definitions
      At line 62 in file startup\2451addr.inc
   Uses
      None
Comment: GPBDAT unused
GPFCON 56000050

Symbol: GPFCON
   Definitions
      At line 57 in file startup\2451addr.inc
   Uses
      None
Comment: GPFCON unused
GPFDAT 56000054

Symbol: GPFDAT
   Definitions
      At line 58 in file startup\2451addr.inc
   Uses
      None
Comment: GPFDAT unused



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

GPFUP 56000058

Symbol: GPFUP
   Definitions
      At line 59 in file startup\2451addr.inc
   Uses
      None
Comment: GPFUP unused
GSTATUS0 560000AC

Symbol: GSTATUS0
   Definitions
      At line 77 in file startup\2451addr.inc
   Uses
      None
Comment: GSTATUS0 unused
GSTATUS1 560000B0

Symbol: GSTATUS1
   Definitions
      At line 78 in file startup\2451addr.inc
   Uses
      None
Comment: GSTATUS1 unused
GSTATUS2 560000B4

Symbol: GSTATUS2
   Definitions
      At line 79 in file startup\2451addr.inc
   Uses
      None
Comment: GSTATUS2 unused
GSTATUS3 560000B8

Symbol: GSTATUS3
   Definitions
      At line 80 in file startup\2451addr.inc
   Uses
      At line 377 in file startup\2451init.s
Comment: GSTATUS3 used once
GSTATUS4 560000BC

Symbol: GSTATUS4
   Definitions
      At line 81 in file startup\2451addr.inc
   Uses
      None
Comment: GSTATUS4 unused
HandleADC 33FFFF9C

Symbol: HandleADC
   Definitions
      At line 432 in file startup\2451init.s
   Uses
      None
Comment: HandleADC unused
HandleBATFLT 33FFFF3C

Symbol: HandleBATFLT



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 407 in file startup\2451init.s
   Uses
      None
Comment: HandleBATFLT unused
HandleCAM 33FFFF38

Symbol: HandleCAM
   Definitions
      At line 406 in file startup\2451init.s
   Uses
      None
Comment: HandleCAM unused
HandleCFCON 33FFFF6C

Symbol: HandleCFCON
   Definitions
      At line 420 in file startup\2451init.s
   Uses
      None
Comment: HandleCFCON unused
HandleDMA0 33FFFF64

Symbol: HandleDMA0
   Definitions
      At line 418 in file startup\2451init.s
   Uses
      None
Comment: HandleDMA0 unused
HandleDabort 33FFFF10

Symbol: HandleDabort
   Definitions
      At line 391 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 150 in file startup\2451init.s
Comment: HandleDabort used once
HandleEINT0 33FFFF20

Symbol: HandleEINT0
   Definitions
      At line 400 in file startup\2451init.s
   Uses
      At line 159 in file startup\2451init.s
Comment: HandleEINT0 used once
HandleEINT1 33FFFF24

Symbol: HandleEINT1
   Definitions
      At line 401 in file startup\2451init.s
   Uses
      None
Comment: HandleEINT1 unused
HandleEINT2 33FFFF28

Symbol: HandleEINT2
   Definitions
      At line 402 in file startup\2451init.s



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: HandleEINT2 unused
HandleEINT3 33FFFF2C

Symbol: HandleEINT3
   Definitions
      At line 403 in file startup\2451init.s
   Uses
      None
Comment: HandleEINT3 unused
HandleEINT4_7 33FFFF30

Symbol: HandleEINT4_7
   Definitions
      At line 404 in file startup\2451init.s
   Uses
      None
Comment: HandleEINT4_7 unused
HandleEINT8_23 33FFFF34

Symbol: HandleEINT8_23
   Definitions
      At line 405 in file startup\2451init.s
   Uses
      None
Comment: HandleEINT8_23 unused
HandleFIQ 33FFFF1C

Symbol: HandleFIQ
   Definitions
      At line 394 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 146 in file startup\2451init.s
Comment: HandleFIQ used once
HandleIIC 33FFFF8C

Symbol: HandleIIC
   Definitions
      At line 428 in file startup\2451init.s
   Uses
      None
Comment: HandleIIC unused
HandleIRQ 33FFFF18

Symbol: HandleIRQ
   Definitions
      At line 393 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 147 in file startup\2451init.s
      At line 211 in file startup\2451init.s

HandleLCD 33FFFF60

Symbol: HandleLCD
   Definitions
      At line 417 in file startup\2451init.s



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: HandleLCD unused
HandleNFCON 33FFFF80

Symbol: HandleNFCON
   Definitions
      At line 425 in file startup\2451init.s
   Uses
      None
Comment: HandleNFCON unused
HandlePabort 33FFFF0C

Symbol: HandlePabort
   Definitions
      At line 390 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 151 in file startup\2451init.s
Comment: HandlePabort used once
HandleRTC 33FFFF98

Symbol: HandleRTC
   Definitions
      At line 431 in file startup\2451init.s
   Uses
      None
Comment: HandleRTC unused
HandleReserved 33FFFF14

Symbol: HandleReserved
   Definitions
      At line 392 in file startup\2451init.s
   Uses
      None
Comment: HandleReserved unused
HandleReset 33FFFF00

Symbol: HandleReset
   Definitions
      At line 387 in file startup\2451init.s
   Uses
      None
Comment: HandleReset unused
HandleSDI0 33FFFF74

Symbol: HandleSDI0
   Definitions
      At line 422 in file startup\2451init.s
   Uses
      None
Comment: HandleSDI0 unused
HandleSDI1 33FFFF70

Symbol: HandleSDI1
   Definitions
      At line 421 in file startup\2451init.s
   Uses
      None



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Absolute symbols

Comment: HandleSDI1 unused
HandleSPI0 33FFFF78

Symbol: HandleSPI0
   Definitions
      At line 423 in file startup\2451init.s
   Uses
      None
Comment: HandleSPI0 unused
HandleSPI1 33FFFF94

Symbol: HandleSPI1
   Definitions
      At line 430 in file startup\2451init.s
   Uses
      None
Comment: HandleSPI1 unused
HandleSWI 33FFFF08

Symbol: HandleSWI
   Definitions
      At line 389 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 149 in file startup\2451init.s
Comment: HandleSWI used once
HandleTICK 33FFFF40

Symbol: HandleTICK
   Definitions
      At line 408 in file startup\2451init.s
   Uses
      None
Comment: HandleTICK unused
HandleTIMER0 33FFFF48

Symbol: HandleTIMER0
   Definitions
      At line 410 in file startup\2451init.s
   Uses
      None
Comment: HandleTIMER0 unused
HandleTIMER1 33FFFF4C

Symbol: HandleTIMER1
   Definitions
      At line 411 in file startup\2451init.s
   Uses
      None
Comment: HandleTIMER1 unused
HandleTIMER2 33FFFF50

Symbol: HandleTIMER2
   Definitions
      At line 412 in file startup\2451init.s
   Uses
      None
Comment: HandleTIMER2 unused
HandleTIMER3 33FFFF54



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Absolute symbols


Symbol: HandleTIMER3
   Definitions
      At line 413 in file startup\2451init.s
   Uses
      None
Comment: HandleTIMER3 unused
HandleTIMER4 33FFFF58

Symbol: HandleTIMER4
   Definitions
      At line 414 in file startup\2451init.s
   Uses
      None
Comment: HandleTIMER4 unused
HandleUART0 33FFFF90

Symbol: HandleUART0
   Definitions
      At line 429 in file startup\2451init.s
   Uses
      None
Comment: HandleUART0 unused
HandleUART1 33FFFF7C

Symbol: HandleUART1
   Definitions
      At line 424 in file startup\2451init.s
   Uses
      None
Comment: HandleUART1 unused
HandleUART2 33FFFF5C

Symbol: HandleUART2
   Definitions
      At line 415 in file startup\2451init.s
   Uses
      None
Comment: HandleUART2 unused
HandleUART3 33FFFF68

Symbol: HandleUART3
   Definitions
      At line 419 in file startup\2451init.s
   Uses
      None
Comment: HandleUART3 unused
HandleUSBD 33FFFF84

Symbol: HandleUSBD
   Definitions
      At line 426 in file startup\2451init.s
   Uses
      None
Comment: HandleUSBD unused
HandleUSBH 33FFFF88

Symbol: HandleUSBH
   Definitions



ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Absolute symbols

      At line 427 in file startup\2451init.s
   Uses
      None
Comment: HandleUSBH unused
HandleUndef 33FFFF04

Symbol: HandleUndef
   Definitions
      At line 388 in file startup\2451init.s
   Uses
      At line 64 in macro HANDLER
      at line 148 in file startup\2451init.s
Comment: HandleUndef used once
HandleWDT 33FFFF44

Symbol: HandleWDT
   Definitions
      At line 409 in file startup\2451init.s
   Uses
      None
Comment: HandleWDT unused
INTMOD 4A000004

Symbol: INTMOD
   Definitions
      At line 45 in file startup\2451addr.inc
   Uses
      None
Comment: INTMOD unused
INTMSK 4A000008

Symbol: INTMSK
   Definitions
      At line 46 in file startup\2451addr.inc
   Uses
      At line 175 in file startup\2451init.s
Comment: INTMSK used once
INTOFFSET 4A000014

Symbol: INTOFFSET
   Definitions
      At line 49 in file startup\2451addr.inc
   Uses
      At line 157 in file startup\2451init.s
Comment: INTOFFSET used once
INTPND 4A000010

Symbol: INTPND
   Definitions
      At line 48 in file startup\2451addr.inc
   Uses
      None
Comment: INTPND unused
INTSUBMSK 4A00001C

Symbol: INTSUBMSK
   Definitions
      At line 51 in file startup\2451addr.inc
   Uses



ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Absolute symbols

      At line 179 in file startup\2451init.s
Comment: INTSUBMSK used once
IRQMODE 00000012

Symbol: IRQMODE
   Definitions
      At line 29 in file startup\2451init.s
   Uses
      At line 236 in file startup\2451init.s
Comment: IRQMODE used once
IRQStack 33FF7000

Symbol: IRQStack
   Definitions
      At line 41 in file startup\2451init.s
   Uses
      At line 238 in file startup\2451init.s
Comment: IRQStack used once
LOCKTIME 4C000000

Symbol: LOCKTIME
   Definitions
      At line 33 in file startup\2451addr.inc
   Uses
      None
Comment: LOCKTIME unused
MISCCR 56000080

Symbol: MISCCR
   Definitions
      At line 66 in file startup\2451addr.inc
   Uses
      At line 345 in file startup\2451init.s
      At line 358 in file startup\2451init.s

MODEMASK 0000001F

Symbol: MODEMASK
   Definitions
      At line 33 in file startup\2451init.s
   Uses
      At line 227 in file startup\2451init.s
      At line 244 in file startup\2451init.s

MPLLCON 4C000004

Symbol: MPLLCON
   Definitions
      At line 34 in file startup\2451addr.inc
   Uses
      None
Comment: MPLLCON unused
MRSRB6 4800002C

Symbol: MRSRB6
   Definitions
      At line 26 in file startup\2451addr.inc
   Uses
      None



ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Absolute symbols

Comment: MRSRB6 unused
MRSRB7 48000030

Symbol: MRSRB7
   Definitions
      At line 27 in file startup\2451addr.inc
   Uses
      None
Comment: MRSRB7 unused
MSLCON 560000CC

Symbol: MSLCON
   Definitions
      At line 84 in file startup\2451addr.inc
   Uses
      None
Comment: MSLCON unused
NFADDR 4E00000C

Symbol: NFADDR
   Definitions
      At line 99 in file startup\2451addr.inc
   Uses
      None
Comment: NFADDR unused
NFCMD 4E000008

Symbol: NFCMD
   Definitions
      At line 98 in file startup\2451addr.inc
   Uses
      None
Comment: NFCMD unused
NFCONF 4E000000

Symbol: NFCONF
   Definitions
      At line 96 in file startup\2451addr.inc
   Uses
      None
Comment: NFCONF unused
NFCONT 4E000004

Symbol: NFCONT
   Definitions
      At line 97 in file startup\2451addr.inc
   Uses
      None
Comment: NFCONT unused
NFDATA 4E000010

Symbol: NFDATA
   Definitions
      At line 100 in file startup\2451addr.inc
   Uses
      None
Comment: NFDATA unused
NFDATA8 4E000010




ARM Macro Assembler    Page 23 Alphabetic symbol ordering
Absolute symbols

Symbol: NFDATA8
   Definitions
      At line 101 in file startup\2451addr.inc
   Uses
      None
Comment: NFDATA8 unused
NFEBLK 4E00003C

Symbol: NFEBLK
   Definitions
      At line 112 in file startup\2451addr.inc
   Uses
      None
Comment: NFEBLK unused
NFESTAT0 4E000024

Symbol: NFESTAT0
   Definitions
      At line 106 in file startup\2451addr.inc
   Uses
      None
Comment: NFESTAT0 unused
NFESTAT1 4E000028

Symbol: NFESTAT1
   Definitions
      At line 107 in file startup\2451addr.inc
   Uses
      None
Comment: NFESTAT1 unused
NFMECC0 4E00002C

Symbol: NFMECC0
   Definitions
      At line 108 in file startup\2451addr.inc
   Uses
      None
Comment: NFMECC0 unused
NFMECC1 4E000030

Symbol: NFMECC1
   Definitions
      At line 109 in file startup\2451addr.inc
   Uses
      None
Comment: NFMECC1 unused
NFMECCD0 4E000014

Symbol: NFMECCD0
   Definitions
      At line 102 in file startup\2451addr.inc
   Uses
      None
Comment: NFMECCD0 unused
NFMECCD1 4E000018

Symbol: NFMECCD1
   Definitions
      At line 103 in file startup\2451addr.inc



ARM Macro Assembler    Page 24 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: NFMECCD1 unused
NFSBLK 4E000038

Symbol: NFSBLK
   Definitions
      At line 111 in file startup\2451addr.inc
   Uses
      None
Comment: NFSBLK unused
NFSECC 4E000034

Symbol: NFSECC
   Definitions
      At line 110 in file startup\2451addr.inc
   Uses
      None
Comment: NFSECC unused
NFSECCD 4E00001C

Symbol: NFSECCD
   Definitions
      At line 104 in file startup\2451addr.inc
   Uses
      None
Comment: NFSECCD unused
NFSTAT 4E000020

Symbol: NFSTAT
   Definitions
      At line 105 in file startup\2451addr.inc
   Uses
      None
Comment: NFSTAT unused
NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 34 in file startup\2451init.s
   Uses
      At line 228 in file startup\2451init.s
      At line 232 in file startup\2451init.s
      At line 236 in file startup\2451init.s
      At line 240 in file startup\2451init.s
      At line 244 in file startup\2451init.s

PRIORITY 4A00000C

Symbol: PRIORITY
   Definitions
      At line 47 in file startup\2451addr.inc
   Uses
      None
Comment: PRIORITY unused
REFCNT 000004F4

Symbol: REFCNT
   Definitions



ARM Macro Assembler    Page 25 Alphabetic symbol ordering
Absolute symbols

      At line 110 in file startup\memcfg.inc
   Uses
      None
Comment: REFCNT unused
REFEN 00000001

Symbol: REFEN
   Definitions
      At line 105 in file startup\memcfg.inc
   Uses
      None
Comment: REFEN unused
REFRESH 48000024

Symbol: REFRESH
   Definitions
      At line 24 in file startup\2451addr.inc
   Uses
      At line 309 in file startup\2451init.s
      At line 327 in file startup\2451init.s
      At line 336 in file startup\2451init.s

SRCPND 4A000000

Symbol: SRCPND
   Definitions
      At line 44 in file startup\2451addr.inc
   Uses
      None
Comment: SRCPND unused
SUSSRCPND 4A000018

Symbol: SUSSRCPND
   Definitions
      At line 50 in file startup\2451addr.inc
   Uses
      None
Comment: SUSSRCPND unused
SVCMODE 00000013

Symbol: SVCMODE
   Definitions
      At line 30 in file startup\2451init.s
   Uses
      At line 245 in file startup\2451init.s
Comment: SVCMODE used once
SVCStack 33FF5800

Symbol: SVCStack
   Definitions
      At line 38 in file startup\2451init.s
   Uses
      At line 247 in file startup\2451init.s
Comment: SVCStack used once
TREFMD 00000000

Symbol: TREFMD
   Definitions
      At line 106 in file startup\memcfg.inc



ARM Macro Assembler    Page 26 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: TREFMD unused
Tchr 00000002

Symbol: Tchr
   Definitions
      At line 109 in file startup\memcfg.inc
   Uses
      None
Comment: Tchr unused
Trp 00000001

Symbol: Trp
   Definitions
      At line 107 in file startup\memcfg.inc
   Uses
      None
Comment: Trp unused
Tsrc 00000001

Symbol: Tsrc
   Definitions
      At line 108 in file startup\memcfg.inc
   Uses
      None
Comment: Tsrc unused
UBLB 00000008

Symbol: UBLB
   Definitions
      At line 17 in file startup\memcfg.inc
   Uses
      None
Comment: UBLB unused
UNDEFMODE 0000001B

Symbol: UNDEFMODE
   Definitions
      At line 32 in file startup\2451init.s
   Uses
      At line 228 in file startup\2451init.s
Comment: UNDEFMODE used once
UPLLCON 4C000008

Symbol: UPLLCON
   Definitions
      At line 35 in file startup\2451addr.inc
   Uses
      None
Comment: UPLLCON unused
USERMODE 00000010

Symbol: USERMODE
   Definitions
      At line 27 in file startup\2451init.s
   Uses
      None
Comment: USERMODE unused



ARM Macro Assembler    Page 27 Alphabetic symbol ordering
Absolute symbols

UndefStack 33FF5C00

Symbol: UndefStack
   Definitions
      At line 39 in file startup\2451init.s
   Uses
      At line 230 in file startup\2451init.s
Comment: UndefStack used once
UserStack 33FF4800

Symbol: UserStack
   Definitions
      At line 37 in file startup\2451init.s
   Uses
      None
Comment: UserStack unused
WAIT 00000004

Symbol: WAIT
   Definitions
      At line 16 in file startup\memcfg.inc
   Uses
      None
Comment: WAIT unused
WTCNT 53000008

Symbol: WTCNT
   Definitions
      At line 91 in file startup\2451addr.inc
   Uses
      None
Comment: WTCNT unused
WTCON 53000000

Symbol: WTCON
   Definitions
      At line 89 in file startup\2451addr.inc
   Uses
      At line 171 in file startup\2451init.s
Comment: WTCON used once
WTDAT 53000004

Symbol: WTDAT
   Definitions
      At line 90 in file startup\2451addr.inc
   Uses
      None
Comment: WTDAT unused
_ISR_STARTADDRESS 33FFFF00

Symbol: _ISR_STARTADDRESS
   Definitions
      At line 13 in file startup\option.inc
   Uses
      At line 386 in file startup\2451init.s
Comment: _ISR_STARTADDRESS used once
_MMUTT_STARTADDRESS 33FF8000

Symbol: _MMUTT_STARTADDRESS



ARM Macro Assembler    Page 28 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 12 in file startup\option.inc
   Uses
      None
Comment: _MMUTT_STARTADDRESS unused
_STACK_BASEADDRESS 33FF8000

Symbol: _STACK_BASEADDRESS
   Definitions
      At line 11 in file startup\option.inc
   Uses
      At line 37 in file startup\2451init.s
      At line 38 in file startup\2451init.s
      At line 39 in file startup\2451init.s
      At line 40 in file startup\2451init.s
      At line 41 in file startup\2451init.s
      At line 42 in file startup\2451init.s

198 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$ER_ROM1$$Base 00000000

Symbol: Image$$ER_ROM1$$Base
   Definitions
      At line 70 in file startup\2451init.s
   Uses
      At line 285 in file startup\2451init.s
Comment: Image$$ER_ROM1$$Base used once
Image$$ER_ROM1$$Limit 00000000

Symbol: Image$$ER_ROM1$$Limit
   Definitions
      At line 71 in file startup\2451init.s
   Uses
      At line 286 in file startup\2451init.s
Comment: Image$$ER_ROM1$$Limit used once
Image$$RW_RAM1$$Base 00000000

Symbol: Image$$RW_RAM1$$Base
   Definitions
      At line 72 in file startup\2451init.s
      At line 73 in file startup\2451init.s
   Uses
      At line 287 in file startup\2451init.s
      At line 288 in file startup\2451init.s
      At line 290 in file startup\2451init.s
Warning: Image$$RW_RAM1$$Base multiply defined
Image$$RW_RAM1$$Limit 00000000

Symbol: Image$$RW_RAM1$$Limit
   Definitions
      At line 74 in file startup\2451init.s
   Uses
      At line 289 in file startup\2451init.s
      At line 291 in file startup\2451init.s

MMU_SetAsyncBusMode 00000000

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 76 in file startup\2451init.s
   Uses
      None
Comment: MMU_SetAsyncBusMode unused
MMU_SetFastBusMode 00000000

Symbol: MMU_SetFastBusMode
   Definitions
      At line 77 in file startup\2451init.s
   Uses
      None
Comment: MMU_SetFastBusMode unused
Main 00000000

Symbol: Main
   Definitions
      At line 79 in file startup\2451init.s
   Uses
      At line 218 in file startup\2451init.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Comment: Main used once
clock_init 00000000

Symbol: clock_init
   Definitions
      At line 185 in file startup\2451init.s
   Uses
      At line 186 in file startup\2451init.s
Comment: clock_init used once
8 symbols
583 symbols in table
