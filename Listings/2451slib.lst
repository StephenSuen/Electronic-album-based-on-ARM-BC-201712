


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ==============
    2 00000000         ; File Name : 2440slib.s
    3 00000000         ; Function  : S3C2440  (Assembly)
    4 00000000         ; Date      : March 09, 2002
    5 00000000         ; Revision : Programming start (February 26,2002) -> SOP
                       
    6 00000000         ; Revision : 03.11.2003 ver 0.0 Attatched for 2440
    7 00000000         ;=======================================================
                       ==============
    8 00000000         
    9 00000000         ;Interrupt, FIQ/IRQ disable
   10 00000000 000000C0 
                       NOINT   EQU              0xc0        ; 1100 0000
   11 00000000         
   12 00000000                 MACRO
   13 00000000                 MOV_PC_LR
   14 00000000                 bx               lr
   15 00000000                 MEND
   16 00000000         
   17 00000000                 AREA             |C$$code|, CODE, READONLY
   18 00000000                 EXPORT           EnterCritical
   19 00000000         EnterCritical
   20 00000000 E10F1000        mrs              r1, cpsr
   21 00000004 E5801000        str              r1, [r0]
   22 00000008 E38110C0        orr              r1, r1, #NOINT
   23 0000000C E12FF001        msr              cpsr_cxsf, r1
   24 00000010                 MOV_PC_LR
   14 00000010 E12FFF1E        bx               lr
   25 00000014         ;restore cpsr, r0 = address to restore cpsr 
   26 00000014                 EXPORT           ExitCritical
   27 00000014         ExitCritical
   28 00000014 E5901000        ldr              r1, [r0]
   29 00000018 E12FF001        msr              cpsr_cxsf, r1
   30 0000001C                 MOV_PC_LR
   14 0000001C E12FFF1E        bx               lr
   31 00000020         ;==============
   32 00000020         ; CPSR I,F bit
   33 00000020         ;==============
   34 00000020         ;int SET_IF(void);
   35 00000020         ;The return value is current CPSR.
   36 00000020                 EXPORT           SET_IF
   37 00000020         SET_IF
   38 00000020         ;This function works only if the processor is in previli
                       ged mode.
   39 00000020 E10F0000        mrs              r0,cpsr
   40 00000024 E1A01000        mov              r1,r0
   41 00000028 E38110C0        orr              r1,r1,#NOINT
   42 0000002C E12FF001        msr              cpsr_cxsf,r1
   43 00000030                 MOV_PC_LR
   14 00000030 E12FFF1E        bx               lr
   44 00000034         
   45 00000034         ;void WR_IF(int cpsrValue);
   46 00000034                 EXPORT           WR_IF
   47 00000034         WR_IF
   48 00000034         ;This function works only if the processor is in previli
                       ged mode.
   49 00000034 E12FF000        msr              cpsr_cxsf,r0
   50 00000038                 MOV_PC_LR



ARM Macro Assembler    Page 2 


   14 00000038 E12FFF1E        bx               lr
   51 0000003C         
   52 0000003C         
   53 0000003C         ;void CLR_IF(void);
   54 0000003C                 EXPORT           CLR_IF
   55 0000003C         CLR_IF
   56 0000003C         ;This function works only if the processor is in previli
                       ged mode.
   57 0000003C E10F0000        mrs              r0,cpsr
   58 00000040 E3C000C0        bic              r0,r0,#NOINT
   59 00000044 E12FF000        msr              cpsr_cxsf,r0
   60 00000048                 MOV_PC_LR
   14 00000048 E12FFF1E        bx               lr
   61 0000004C         
   62 0000004C                 EXPORT           outportw
   63 0000004C E1C100B0 
                       outportw
                               strh             r0, [r1]
   64 00000050                 MOV_PC_LR
   14 00000050 E12FFF1E        bx               lr
   65 00000054         
   66 00000054                 EXPORT           inportw
   67 00000054 E1D000B0 
                       inportw ldrh             r0, [r0]
   68 00000058                 MOV_PC_LR
   14 00000058 E12FFF1E        bx               lr
   69 0000005C         
   70 0000005C         
   71 0000005C         ;====================================
   72 0000005C         ; MMU Cache/TLB/etc on/off functions
   73 0000005C         ;====================================
   74 0000005C 00001000 
                       R1_I    EQU              (1<<12)
   75 0000005C 00000004 
                       R1_C    EQU              (1<<2)
   76 0000005C 00000002 
                       R1_A    EQU              (1<<1)
   77 0000005C 00000001 
                       R1_M    EQU              (1)
   78 0000005C 80000000 
                       R1_iA   EQU              (1<<31)
   79 0000005C 40000000 
                       R1_nF   EQU              (1<<30)
   80 0000005C         
   81 0000005C         ;void MMU_EnableICache(void)
   82 0000005C                 EXPORT           MMU_EnableICache
   83 0000005C         MMU_EnableICache
   84 0000005C EE110F10        mrc              p15,0,r0,c1,c0,0
   85 00000060 E3800A01        orr              r0,r0,#R1_I
   86 00000064 EE010F10        mcr              p15,0,r0,c1,c0,0
   87 00000068                 MOV_PC_LR
   14 00000068 E12FFF1E        bx               lr
   88 0000006C         
   89 0000006C         ;void MMU_DisableICache(void)
   90 0000006C                 EXPORT           MMU_DisableICache
   91 0000006C         MMU_DisableICache
   92 0000006C EE110F10        mrc              p15,0,r0,c1,c0,0
   93 00000070 E3C00A01        bic              r0,r0,#R1_I
   94 00000074 EE010F10        mcr              p15,0,r0,c1,c0,0



ARM Macro Assembler    Page 3 


   95 00000078                 MOV_PC_LR
   14 00000078 E12FFF1E        bx               lr
   96 0000007C         
   97 0000007C         ;void MMU_EnableDCache(void)
   98 0000007C                 EXPORT           MMU_EnableDCache
   99 0000007C         MMU_EnableDCache
  100 0000007C EE110F10        mrc              p15,0,r0,c1,c0,0
  101 00000080 E3800004        orr              r0,r0,#R1_C
  102 00000084 EE010F10        mcr              p15,0,r0,c1,c0,0
  103 00000088                 MOV_PC_LR
   14 00000088 E12FFF1E        bx               lr
  104 0000008C         
  105 0000008C         ;void MMU_DisableDCache(void)
  106 0000008C                 EXPORT           MMU_DisableDCache
  107 0000008C         MMU_DisableDCache
  108 0000008C EE110F10        mrc              p15,0,r0,c1,c0,0
  109 00000090 E3C00004        bic              r0,r0,#R1_C
  110 00000094 EE010F10        mcr              p15,0,r0,c1,c0,0
  111 00000098                 MOV_PC_LR
   14 00000098 E12FFF1E        bx               lr
  112 0000009C         
  113 0000009C         ;void MMU_EnableAlignFault(void)
  114 0000009C                 EXPORT           MMU_EnableAlignFault
  115 0000009C         MMU_EnableAlignFault
  116 0000009C EE110F10        mrc              p15,0,r0,c1,c0,0
  117 000000A0 E3800002        orr              r0,r0,#R1_A
  118 000000A4 EE010F10        mcr              p15,0,r0,c1,c0,0
  119 000000A8                 MOV_PC_LR
   14 000000A8 E12FFF1E        bx               lr
  120 000000AC         
  121 000000AC         ;void MMU_DisableAlignFault(void)
  122 000000AC                 EXPORT           MMU_DisableAlignFault
  123 000000AC         MMU_DisableAlignFault
  124 000000AC EE110F10        mrc              p15,0,r0,c1,c0,0
  125 000000B0 E3C00002        bic              r0,r0,#R1_A
  126 000000B4 EE010F10        mcr              p15,0,r0,c1,c0,0
  127 000000B8                 MOV_PC_LR
   14 000000B8 E12FFF1E        bx               lr
  128 000000BC         
  129 000000BC         ;void MMU_EnableMMU(void)
  130 000000BC                 EXPORT           MMU_EnableMMU
  131 000000BC         MMU_EnableMMU
  132 000000BC EE110F10        mrc              p15,0,r0,c1,c0,0
  133 000000C0 E3800001        orr              r0,r0,#R1_M
  134 000000C4 EE010F10        mcr              p15,0,r0,c1,c0,0
  135 000000C8                 MOV_PC_LR
   14 000000C8 E12FFF1E        bx               lr
  136 000000CC         
  137 000000CC         ;void MMU_DisableMMU(void)
  138 000000CC                 EXPORT           MMU_DisableMMU
  139 000000CC         MMU_DisableMMU
  140 000000CC EE110F10        mrc              p15,0,r0,c1,c0,0
  141 000000D0 E3C00001        bic              r0,r0,#R1_M
  142 000000D4 EE010F10        mcr              p15,0,r0,c1,c0,0
  143 000000D8                 MOV_PC_LR
   14 000000D8 E12FFF1E        bx               lr
  144 000000DC         
  145 000000DC         ;void MMU_SetFastBusMode(void)
  146 000000DC         ; FCLK:HCLK= 1:1



ARM Macro Assembler    Page 4 


  147 000000DC                 EXPORT           MMU_SetFastBusMode
  148 000000DC         MMU_SetFastBusMode
  149 000000DC EE110F10        mrc              p15,0,r0,c1,c0,0
  150 000000E0 E3C00103        bic              r0,r0,#R1_iA:OR:R1_nF
  151 000000E4 EE010F10        mcr              p15,0,r0,c1,c0,0
  152 000000E8                 MOV_PC_LR
   14 000000E8 E12FFF1E        bx               lr
  153 000000EC         
  154 000000EC         ;void MMU_SetAsyncBusMode(void)
  155 000000EC         ; FCLK:HCLK= 1:2
  156 000000EC                 EXPORT           MMU_SetAsyncBusMode
  157 000000EC         MMU_SetAsyncBusMode
  158 000000EC EE110F10        mrc              p15,0,r0,c1,c0,0
  159 000000F0 E3800103        orr              r0,r0,#R1_nF:OR:R1_iA
  160 000000F4 EE010F10        mcr              p15,0,r0,c1,c0,0
  161 000000F8                 MOV_PC_LR
   14 000000F8 E12FFF1E        bx               lr
  162 000000FC         
  163 000000FC         ;=========================
  164 000000FC         ; Set TTBase
  165 000000FC         ;=========================
  166 000000FC         ;void MMU_SetTTBase(int base)
  167 000000FC                 EXPORT           MMU_SetTTBase
  168 000000FC         MMU_SetTTBase
  169 000000FC         ;ro=TTBase
  170 000000FC EE020F10        mcr              p15,0,r0,c2,c0,0
  171 00000100                 MOV_PC_LR
   14 00000100 E12FFF1E        bx               lr
  172 00000104         
  173 00000104         ;=========================
  174 00000104         ; Set Domain
  175 00000104         ;=========================
  176 00000104         ;void MMU_SetDomain(int domain)
  177 00000104                 EXPORT           MMU_SetDomain
  178 00000104         MMU_SetDomain
  179 00000104         ;ro=domain
  180 00000104 EE030F10        mcr              p15,0,r0,c3,c0,0
  181 00000108                 MOV_PC_LR
   14 00000108 E12FFF1E        bx               lr
  182 0000010C         
  183 0000010C         ;=========================
  184 0000010C         ; ICache/DCache functions
  185 0000010C         ;=========================
  186 0000010C         ;void MMU_InvalidateIDCache(void)
  187 0000010C                 EXPORT           MMU_InvalidateIDCache
  188 0000010C         MMU_InvalidateIDCache
  189 0000010C EE070F17        mcr              p15,0,r0,c7,c7,0
  190 00000110                 MOV_PC_LR
   14 00000110 E12FFF1E        bx               lr
  191 00000114         
  192 00000114         ;void MMU_InvalidateICache(void)
  193 00000114                 EXPORT           MMU_InvalidateICache
  194 00000114         MMU_InvalidateICache
  195 00000114 EE070F15        mcr              p15,0,r0,c7,c5,0
  196 00000118                 MOV_PC_LR
   14 00000118 E12FFF1E        bx               lr
  197 0000011C         
  198 0000011C         ;void MMU_InvalidateICacheMVA(U32 mva)
  199 0000011C                 EXPORT           MMU_InvalidateICacheMVA



ARM Macro Assembler    Page 5 


  200 0000011C         MMU_InvalidateICacheMVA
  201 0000011C         ;r0=mva
  202 0000011C EE070F35        mcr              p15,0,r0,c7,c5,1
  203 00000120                 MOV_PC_LR
   14 00000120 E12FFF1E        bx               lr
  204 00000124         
  205 00000124         ;void MMU_PrefetchICacheMVA(U32 mva)
  206 00000124                 EXPORT           MMU_PrefetchICacheMVA
  207 00000124         MMU_PrefetchICacheMVA
  208 00000124         ;r0=mva
  209 00000124 EE070F3D        mcr              p15,0,r0,c7,c13,1
  210 00000128                 MOV_PC_LR
   14 00000128 E12FFF1E        bx               lr
  211 0000012C         
  212 0000012C         ;void MMU_InvalidateDCache(void)
  213 0000012C                 EXPORT           MMU_InvalidateDCache
  214 0000012C         MMU_InvalidateDCache
  215 0000012C EE070F16        mcr              p15,0,r0,c7,c6,0
  216 00000130                 MOV_PC_LR
   14 00000130 E12FFF1E        bx               lr
  217 00000134         
  218 00000134         ;void MMU_InvalidateDCacheMVA(U32 mva)
  219 00000134                 EXPORT           MMU_InvalidateDCacheMVA
  220 00000134         MMU_InvalidateDCacheMVA
  221 00000134         ;r0=mva
  222 00000134 EE070F36        mcr              p15,0,r0,c7,c6,1
  223 00000138                 MOV_PC_LR
   14 00000138 E12FFF1E        bx               lr
  224 0000013C         
  225 0000013C         ;void MMU_CleanDCacheMVA(U32 mva)
  226 0000013C                 EXPORT           MMU_CleanDCacheMVA
  227 0000013C         MMU_CleanDCacheMVA
  228 0000013C         ;r0=mva
  229 0000013C EE070F3A        mcr              p15,0,r0,c7,c10,1
  230 00000140                 MOV_PC_LR
   14 00000140 E12FFF1E        bx               lr
  231 00000144         
  232 00000144         ;void MMU_CleanInvalidateDCacheMVA(U32 mva)
  233 00000144                 EXPORT           MMU_CleanInvalidateDCacheMVA
  234 00000144         MMU_CleanInvalidateDCacheMVA
  235 00000144         ;r0=mva
  236 00000144 EE070F3E        mcr              p15,0,r0,c7,c14,1
  237 00000148                 MOV_PC_LR
   14 00000148 E12FFF1E        bx               lr
  238 0000014C         
  239 0000014C         ;void MMU_CleanDCacheIndex(U32 index)
  240 0000014C                 EXPORT           MMU_CleanDCacheIndex
  241 0000014C         MMU_CleanDCacheIndex
  242 0000014C         ;r0=index
  243 0000014C EE070F5A        mcr              p15,0,r0,c7,c10,2
  244 00000150                 MOV_PC_LR
   14 00000150 E12FFF1E        bx               lr
  245 00000154         
  246 00000154         ;void MMU_CleanInvalidateDCacheIndex(U32 index)
  247 00000154                 EXPORT           MMU_CleanInvalidateDCacheIndex
  248 00000154         MMU_CleanInvalidateDCacheIndex
  249 00000154         ;r0=index
  250 00000154 EE070F5E        mcr              p15,0,r0,c7,c14,2
  251 00000158                 MOV_PC_LR



ARM Macro Assembler    Page 6 


   14 00000158 E12FFF1E        bx               lr
  252 0000015C         
  253 0000015C         ;void MMU_WaitForInterrupt(void)
  254 0000015C                 EXPORT           MMU_WaitForInterrupt
  255 0000015C         MMU_WaitForInterrupt
  256 0000015C EE070F90        mcr              p15,0,r0,c7,c0,4
  257 00000160                 MOV_PC_LR
   14 00000160 E12FFF1E        bx               lr
  258 00000164         
  259 00000164         ;===============
  260 00000164         ; TLB functions
  261 00000164         ;===============
  262 00000164         ;voic MMU_InvalidateTLB(void)
  263 00000164                 EXPORT           MMU_InvalidateTLB
  264 00000164         MMU_InvalidateTLB
  265 00000164 EE080F17        mcr              p15,0,r0,c8,c7,0
  266 00000168                 MOV_PC_LR
   14 00000168 E12FFF1E        bx               lr
  267 0000016C         
  268 0000016C         ;void MMU_InvalidateITLB(void)
  269 0000016C                 EXPORT           MMU_InvalidateITLB
  270 0000016C         MMU_InvalidateITLB
  271 0000016C EE080F15        mcr              p15,0,r0,c8,c5,0
  272 00000170                 MOV_PC_LR
   14 00000170 E12FFF1E        bx               lr
  273 00000174         
  274 00000174         ;void MMU_InvalidateITLBMVA(U32 mva)
  275 00000174                 EXPORT           MMU_InvalidateITLBMVA
  276 00000174         MMU_InvalidateITLBMVA
  277 00000174         ;ro=mva
  278 00000174 EE080F35        mcr              p15,0,r0,c8,c5,1
  279 00000178                 MOV_PC_LR
   14 00000178 E12FFF1E        bx               lr
  280 0000017C         
  281 0000017C         ;void MMU_InvalidateDTLB(void)
  282 0000017C                 EXPORT           MMU_InvalidateDTLB
  283 0000017C         MMU_InvalidateDTLB
  284 0000017C EE080F16        mcr              p15,0,r0,c8,c6,0
  285 00000180                 MOV_PC_LR
   14 00000180 E12FFF1E        bx               lr
  286 00000184         
  287 00000184         ;void MMU_InvalidateDTLBMVA(U32 mva)
  288 00000184                 EXPORT           MMU_InvalidateDTLBMVA
  289 00000184         MMU_InvalidateDTLBMVA
  290 00000184         ;r0=mva
  291 00000184 EE080F36        mcr              p15,0,r0,c8,c6,1
  292 00000188                 MOV_PC_LR
   14 00000188 E12FFF1E        bx               lr
  293 0000018C         
  294 0000018C         ;=================
  295 0000018C         ; Cache lock down
  296 0000018C         ;=================
  297 0000018C         ;void MMU_SetDCacheLockdownBase(U32 base)
  298 0000018C                 EXPORT           MMU_SetDCacheLockdownBase
  299 0000018C         MMU_SetDCacheLockdownBase
  300 0000018C         ;r0= victim & lockdown base
  301 0000018C EE090F10        mcr              p15,0,r0,c9,c0,0
  302 00000190                 MOV_PC_LR
   14 00000190 E12FFF1E        bx               lr



ARM Macro Assembler    Page 7 


  303 00000194         
  304 00000194         ;void MMU_SetICacheLockdownBase(U32 base)
  305 00000194                 EXPORT           MMU_SetICacheLockdownBase
  306 00000194         MMU_SetICacheLockdownBase
  307 00000194         ;r0= victim & lockdown base
  308 00000194 EE090F30        mcr              p15,0,r0,c9,c0,1
  309 00000198                 MOV_PC_LR
   14 00000198 E12FFF1E        bx               lr
  310 0000019C         
  311 0000019C         ;=================
  312 0000019C         ; TLB lock down
  313 0000019C         ;=================
  314 0000019C         ;void MMU_SetDTLBLockdown(U32 baseVictim)
  315 0000019C                 EXPORT           MMU_SetDTLBLockdown
  316 0000019C         MMU_SetDTLBLockdown
  317 0000019C         ;r0= baseVictim
  318 0000019C EE0A0F10        mcr              p15,0,r0,c10,c0,0
  319 000001A0                 MOV_PC_LR
   14 000001A0 E12FFF1E        bx               lr
  320 000001A4         
  321 000001A4         ;void MMU_SetITLBLockdown(U32 baseVictim)
  322 000001A4                 EXPORT           MMU_SetITLBLockdown
  323 000001A4         MMU_SetITLBLockdown
  324 000001A4         ;r0= baseVictim
  325 000001A4 EE0A0F30        mcr              p15,0,r0,c10,c0,1
  326 000001A8                 MOV_PC_LR
   14 000001A8 E12FFF1E        bx               lr
  327 000001AC         
  328 000001AC         ;============
  329 000001AC         ; Process ID
  330 000001AC         ;============
  331 000001AC         ;void MMU_SetProcessId(U32 pid)
  332 000001AC                 EXPORT           MMU_SetProcessId
  333 000001AC         MMU_SetProcessId
  334 000001AC         ;r0= pid
  335 000001AC EE0D0F10        mcr              p15,0,r0,c13,c0,0
  336 000001B0                 MOV_PC_LR
   14 000001B0 E12FFF1E        bx               lr
  337 000001B4         
  338 000001B4                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM926EJ-S --apcs=inter
work --depend=.\objects\2451slib.d -o.\objects\2451slib.o -I"D:\KEIL FOR ARM\AR
M\RV31\INC" -I"D:\KEIL FOR ARM\ARM\CMSIS\Include" --predefine="__UVISION_VERSIO
N SETA 514" --list=.\listings\2451slib.lst startup\2451slib.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C$$code 00000000

Symbol: C$$code
   Definitions
      At line 17 in file startup\2451slib.s
   Uses
      None
Comment: C$$code unused
CLR_IF 0000003C

Symbol: CLR_IF
   Definitions
      At line 55 in file startup\2451slib.s
   Uses
      At line 54 in file startup\2451slib.s
Comment: CLR_IF used once
EnterCritical 00000000

Symbol: EnterCritical
   Definitions
      At line 19 in file startup\2451slib.s
   Uses
      At line 18 in file startup\2451slib.s
Comment: EnterCritical used once
ExitCritical 00000014

Symbol: ExitCritical
   Definitions
      At line 27 in file startup\2451slib.s
   Uses
      At line 26 in file startup\2451slib.s
Comment: ExitCritical used once
MMU_CleanDCacheIndex 0000014C

Symbol: MMU_CleanDCacheIndex
   Definitions
      At line 241 in file startup\2451slib.s
   Uses
      At line 240 in file startup\2451slib.s
Comment: MMU_CleanDCacheIndex used once
MMU_CleanDCacheMVA 0000013C

Symbol: MMU_CleanDCacheMVA
   Definitions
      At line 227 in file startup\2451slib.s
   Uses
      At line 226 in file startup\2451slib.s
Comment: MMU_CleanDCacheMVA used once
MMU_CleanInvalidateDCacheIndex 00000154

Symbol: MMU_CleanInvalidateDCacheIndex
   Definitions
      At line 248 in file startup\2451slib.s
   Uses
      At line 247 in file startup\2451slib.s
Comment: MMU_CleanInvalidateDCacheIndex used once
MMU_CleanInvalidateDCacheMVA 00000144

Symbol: MMU_CleanInvalidateDCacheMVA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 234 in file startup\2451slib.s
   Uses
      At line 233 in file startup\2451slib.s
Comment: MMU_CleanInvalidateDCacheMVA used once
MMU_DisableAlignFault 000000AC

Symbol: MMU_DisableAlignFault
   Definitions
      At line 123 in file startup\2451slib.s
   Uses
      At line 122 in file startup\2451slib.s
Comment: MMU_DisableAlignFault used once
MMU_DisableDCache 0000008C

Symbol: MMU_DisableDCache
   Definitions
      At line 107 in file startup\2451slib.s
   Uses
      At line 106 in file startup\2451slib.s
Comment: MMU_DisableDCache used once
MMU_DisableICache 0000006C

Symbol: MMU_DisableICache
   Definitions
      At line 91 in file startup\2451slib.s
   Uses
      At line 90 in file startup\2451slib.s
Comment: MMU_DisableICache used once
MMU_DisableMMU 000000CC

Symbol: MMU_DisableMMU
   Definitions
      At line 139 in file startup\2451slib.s
   Uses
      At line 138 in file startup\2451slib.s
Comment: MMU_DisableMMU used once
MMU_EnableAlignFault 0000009C

Symbol: MMU_EnableAlignFault
   Definitions
      At line 115 in file startup\2451slib.s
   Uses
      At line 114 in file startup\2451slib.s
Comment: MMU_EnableAlignFault used once
MMU_EnableDCache 0000007C

Symbol: MMU_EnableDCache
   Definitions
      At line 99 in file startup\2451slib.s
   Uses
      At line 98 in file startup\2451slib.s
Comment: MMU_EnableDCache used once
MMU_EnableICache 0000005C

Symbol: MMU_EnableICache
   Definitions
      At line 83 in file startup\2451slib.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 82 in file startup\2451slib.s
Comment: MMU_EnableICache used once
MMU_EnableMMU 000000BC

Symbol: MMU_EnableMMU
   Definitions
      At line 131 in file startup\2451slib.s
   Uses
      At line 130 in file startup\2451slib.s
Comment: MMU_EnableMMU used once
MMU_InvalidateDCache 0000012C

Symbol: MMU_InvalidateDCache
   Definitions
      At line 214 in file startup\2451slib.s
   Uses
      At line 213 in file startup\2451slib.s
Comment: MMU_InvalidateDCache used once
MMU_InvalidateDCacheMVA 00000134

Symbol: MMU_InvalidateDCacheMVA
   Definitions
      At line 220 in file startup\2451slib.s
   Uses
      At line 219 in file startup\2451slib.s
Comment: MMU_InvalidateDCacheMVA used once
MMU_InvalidateDTLB 0000017C

Symbol: MMU_InvalidateDTLB
   Definitions
      At line 283 in file startup\2451slib.s
   Uses
      At line 282 in file startup\2451slib.s
Comment: MMU_InvalidateDTLB used once
MMU_InvalidateDTLBMVA 00000184

Symbol: MMU_InvalidateDTLBMVA
   Definitions
      At line 289 in file startup\2451slib.s
   Uses
      At line 288 in file startup\2451slib.s
Comment: MMU_InvalidateDTLBMVA used once
MMU_InvalidateICache 00000114

Symbol: MMU_InvalidateICache
   Definitions
      At line 194 in file startup\2451slib.s
   Uses
      At line 193 in file startup\2451slib.s
Comment: MMU_InvalidateICache used once
MMU_InvalidateICacheMVA 0000011C

Symbol: MMU_InvalidateICacheMVA
   Definitions
      At line 200 in file startup\2451slib.s
   Uses
      At line 199 in file startup\2451slib.s
Comment: MMU_InvalidateICacheMVA used once
MMU_InvalidateIDCache 0000010C



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MMU_InvalidateIDCache
   Definitions
      At line 188 in file startup\2451slib.s
   Uses
      At line 187 in file startup\2451slib.s
Comment: MMU_InvalidateIDCache used once
MMU_InvalidateITLB 0000016C

Symbol: MMU_InvalidateITLB
   Definitions
      At line 270 in file startup\2451slib.s
   Uses
      At line 269 in file startup\2451slib.s
Comment: MMU_InvalidateITLB used once
MMU_InvalidateITLBMVA 00000174

Symbol: MMU_InvalidateITLBMVA
   Definitions
      At line 276 in file startup\2451slib.s
   Uses
      At line 275 in file startup\2451slib.s
Comment: MMU_InvalidateITLBMVA used once
MMU_InvalidateTLB 00000164

Symbol: MMU_InvalidateTLB
   Definitions
      At line 264 in file startup\2451slib.s
   Uses
      At line 263 in file startup\2451slib.s
Comment: MMU_InvalidateTLB used once
MMU_PrefetchICacheMVA 00000124

Symbol: MMU_PrefetchICacheMVA
   Definitions
      At line 207 in file startup\2451slib.s
   Uses
      At line 206 in file startup\2451slib.s
Comment: MMU_PrefetchICacheMVA used once
MMU_SetAsyncBusMode 000000EC

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 157 in file startup\2451slib.s
   Uses
      At line 156 in file startup\2451slib.s
Comment: MMU_SetAsyncBusMode used once
MMU_SetDCacheLockdownBase 0000018C

Symbol: MMU_SetDCacheLockdownBase
   Definitions
      At line 299 in file startup\2451slib.s
   Uses
      At line 298 in file startup\2451slib.s
Comment: MMU_SetDCacheLockdownBase used once
MMU_SetDTLBLockdown 0000019C

Symbol: MMU_SetDTLBLockdown
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 316 in file startup\2451slib.s
   Uses
      At line 315 in file startup\2451slib.s
Comment: MMU_SetDTLBLockdown used once
MMU_SetDomain 00000104

Symbol: MMU_SetDomain
   Definitions
      At line 178 in file startup\2451slib.s
   Uses
      At line 177 in file startup\2451slib.s
Comment: MMU_SetDomain used once
MMU_SetFastBusMode 000000DC

Symbol: MMU_SetFastBusMode
   Definitions
      At line 148 in file startup\2451slib.s
   Uses
      At line 147 in file startup\2451slib.s
Comment: MMU_SetFastBusMode used once
MMU_SetICacheLockdownBase 00000194

Symbol: MMU_SetICacheLockdownBase
   Definitions
      At line 306 in file startup\2451slib.s
   Uses
      At line 305 in file startup\2451slib.s
Comment: MMU_SetICacheLockdownBase used once
MMU_SetITLBLockdown 000001A4

Symbol: MMU_SetITLBLockdown
   Definitions
      At line 323 in file startup\2451slib.s
   Uses
      At line 322 in file startup\2451slib.s
Comment: MMU_SetITLBLockdown used once
MMU_SetProcessId 000001AC

Symbol: MMU_SetProcessId
   Definitions
      At line 333 in file startup\2451slib.s
   Uses
      At line 332 in file startup\2451slib.s
Comment: MMU_SetProcessId used once
MMU_SetTTBase 000000FC

Symbol: MMU_SetTTBase
   Definitions
      At line 168 in file startup\2451slib.s
   Uses
      At line 167 in file startup\2451slib.s
Comment: MMU_SetTTBase used once
MMU_WaitForInterrupt 0000015C

Symbol: MMU_WaitForInterrupt
   Definitions
      At line 255 in file startup\2451slib.s
   Uses
      At line 254 in file startup\2451slib.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: MMU_WaitForInterrupt used once
SET_IF 00000020

Symbol: SET_IF
   Definitions
      At line 37 in file startup\2451slib.s
   Uses
      At line 36 in file startup\2451slib.s
Comment: SET_IF used once
WR_IF 00000034

Symbol: WR_IF
   Definitions
      At line 47 in file startup\2451slib.s
   Uses
      At line 46 in file startup\2451slib.s
Comment: WR_IF used once
inportw 00000054

Symbol: inportw
   Definitions
      At line 67 in file startup\2451slib.s
   Uses
      At line 66 in file startup\2451slib.s
Comment: inportw used once
outportw 0000004C

Symbol: outportw
   Definitions
      At line 63 in file startup\2451slib.s
   Uses
      At line 62 in file startup\2451slib.s
Comment: outportw used once
41 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 10 in file startup\2451slib.s
   Uses
      At line 22 in file startup\2451slib.s
      At line 41 in file startup\2451slib.s
      At line 58 in file startup\2451slib.s

R1_A 00000002

Symbol: R1_A
   Definitions
      At line 76 in file startup\2451slib.s
   Uses
      At line 117 in file startup\2451slib.s
      At line 125 in file startup\2451slib.s

R1_C 00000004

Symbol: R1_C
   Definitions
      At line 75 in file startup\2451slib.s
   Uses
      At line 101 in file startup\2451slib.s
      At line 109 in file startup\2451slib.s

R1_I 00001000

Symbol: R1_I
   Definitions
      At line 74 in file startup\2451slib.s
   Uses
      At line 85 in file startup\2451slib.s
      At line 93 in file startup\2451slib.s

R1_M 00000001

Symbol: R1_M
   Definitions
      At line 77 in file startup\2451slib.s
   Uses
      At line 133 in file startup\2451slib.s
      At line 141 in file startup\2451slib.s

R1_iA 80000000

Symbol: R1_iA
   Definitions
      At line 78 in file startup\2451slib.s
   Uses
      At line 150 in file startup\2451slib.s
      At line 159 in file startup\2451slib.s

R1_nF 40000000

Symbol: R1_nF
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 79 in file startup\2451slib.s
   Uses
      At line 150 in file startup\2451slib.s
      At line 159 in file startup\2451slib.s

7 symbols
379 symbols in table
